[
  {
    "Title": "The economic impact of the AI-powered developer lifecycle and lessons from GitHub Copilot",
    "Author": "Thomas Dohmke",
    "TextSummary": "Today at Collision Conference we unveiled breaking new research on the economic and productivity impact of generative AI–powered developer tools. The research found that the increase in developer productivity due to AI could boost global GDP by over $1.5 trillion.",
    "RawContent": "<p>Almost one year ago, <a href=\"https://github.blog/2022-06-21-github-copilot-is-generally-available-to-all-developers/\">we launched GitHub Copilot to the world</a>. At the time, it felt like a leap into the unknown: We were introducing the first at-scale AI pair programmer to the world’s developers, and were cautiously optimistic. But now I am overwhelmingly confident in the promise of this technology. One year later, we have witnessed a sea change in software development.</p>\n<p>Today, GitHub Copilot has been activated by more than one million developers and adopted by over 20,000 organizations. It has generated over three billion accepted lines of code, and is the world’s most widely adopted AI developer tool.</p>\n<p>From productivity analysis to developer happiness, we have been collecting research and data on GitHub Copilot that will help us continue to improve and adapt our models. As we have recently passed the one-year anniversary of GitHub Copilot’s launch, I’m sharing key insights we’ve discovered along the way, and <a href=\"https://arxiv.org/abs/2306.15033\">breaking research released today</a> that includes the economic impact of the AI-powered developer lifecycle. Let’s dive in.</p>\n<aside class=\"p-4 p-md-6 post-aside--large\"><p class=\"h5-mktg gh-aside-title\">Want to learn more?</p><p>These findings come from research we conducted with the analyst firm Keystone.AI and Harvard Business School professor Marco Iansiti. Our goal? To explore the immediate and long-term impact generative AI will have on developer productivity, the global economy and the open source ecosystem.</p>\n<p><a href=\"https://arxiv.org/abs/2306.15033\">Get the research</a></p>\n</aside>\n<h2 id=\"generative-ai-signals-a-sea-change-in-software-development\">Generative AI signals a sea change in software development<a href=\"#generative-ai-signals-a-sea-change-in-software-development\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Generative AI signals a sea change in software development\"></a></h2>\n<p><strong>GitHub Copilot is turbocharging developer productivity</strong>. Analysis on a large sample of GitHub Copilot users (n = 934,533) reveals a sizable productivity impact. On average, within the first year in the market, users accept nearly 30% of code suggestions from GitHub Copilot and report increased productivity from these acceptances. Furthermore, we found that over time, the acceptance rate steadily increased as developers became more familiar with the tool. This suggests that GitHub Copilot has a large runway to continue its impact on developer productivity, as users become more accustomed to developing software with it.</p>\n<figure id=\"attachment_72684\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" class=\"width-fit size-large wp-image-72684 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=1024&#038;fit=1024%2C1024\" alt=\"This figure shows the acceptance rate of GitHub Copilot recommendations over time.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">This figure shows the acceptance rate of GitHub Copilot recommendations over time.</figcaption></figure>\n<p><strong>AI developer productivity benefits could boost global GDP by over $1.5 trillion</strong>. Using 30% productivity enhancement, with a projected number of 45 million professional developers in 2030, generative AI developer tools could add productivity gains of an additional 15 million “effective developers” to worldwide capacity by 2030. This could boost global GDP by over $1.5 trillion, a boon to economic activity generated by this one group of workers. We know that the demand for software and developers will likely increase—as it has throughout the history of developer tools–and these productivity gains will continue to trigger an enormous impact, as developers seize new opportunities to utilize AI for solutions design and accelerate digital transformation worldwide.</p>\n<figure id=\"attachment_72685\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" loading=\"lazy\" class=\"width-fit size-large wp-image-72685 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=1024&#038;fit=1024%2C1024\" alt=\"AI-powered developer tools could benefit global GDP by as much as $1.5 trillion with the productivity gains of “15 million” effective developers.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">AI-powered developer tools could benefit global GDP by as much as $1.5 trillion with the productivity gains of “15 million” effective developers.</figcaption></figure>\n<p><strong>Less experienced developers benefit more from GitHub Copilot</strong>. Our study also found that less experienced developers have a greater advantage with tools like GitHub Copilot, which is corroborated by other studies, including <a href=\"https://arxiv.org/abs/2302.06590\">our own previous experiments</a> on the impact of AI on developer productivity. As developers use these tools to upskill, they will become more fluent in prompting and interacting with AI to power the development lifecycle. This will ultimately help democratize software development for more people, help close the labor gap, and establish AI pair programming tools as part of the standard developer education experience.</p>\n<figure id=\"attachment_72686\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" loading=\"lazy\" class=\"width-fit size-large wp-image-72686 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=1024&#038;fit=1024%2C1024\" alt=\"This figure shows that developers with less experience benefit relatively more than more experienced developers.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">This figure shows that developers with less experience benefit relatively more than more experienced developers.</figcaption></figure>\n<p><strong>GitHub is the engineering system for the age of AI</strong>. We also observed an explosion of open source innovation on GitHub. According to our ecosystem analysis of AI repositories on GitHub, the landscape that makes up those working on generative AI is diverse, from big tech companies to individuals. And open source activity around generative AI projects, based on our analysis of GitHub repositories and commits, has increased exponentially. We expect open source developers on GitHub to drive the next wave of AI innovation.</p>\n<figure id=\"attachment_72687\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" loading=\"lazy\" class=\"width-fit size-large wp-image-72687 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=1024&#038;fit=1024%2C1024\" alt=\"This figure shows the monthly growth in the number of commits in generative AI repositories on GitHub.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">This figure shows the monthly growth in the number of commits in generative AI repositories on GitHub.</figcaption></figure>\n<h2 id=\"faster-happier-developers\">Faster, happier developers<a href=\"#faster-happier-developers\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Faster, happier developers\"></a></h2>\n<p>Previous research examined not only the acceptance rate, but the speed at which developers completed tasks with GitHub Copilot. For example, we found in a quantitative research study that<a href=\"https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/\"> developers completed tasks 55% faster with GitHub Copilot</a>. Moreover, our early research found that <a href=\"https://github.blog/2023-02-14-github-copilot-for-business-is-now-available/\">46% of code was completed by GitHub Copilot in those files where it was enabled</a>. These are impressive figures, but productivity for productivity’s sake means nothing—we built GitHub Copilot for the sake of developer happiness. This is GitHub Copilot&#8217;s inherent purpose.</p>\n<p>And it’s been a success in that regard, too. <a href=\"https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/\">In one survey</a>, 75% of developers said they felt more fulfilled when using GitHub Copilot. <a href=\"https://github.blog/2023-06-13-survey-reveals-ais-impact-on-the-developer-experience/\">In another survey</a>, developers said the top benefit of AI coding tools was improving their coding language skills, which developers also said can lead to a more positive workday. More productive, more satisfied, and more capable developers—that’s exactly what GitHub Copilot is all about.</p>\n<figure id=\"attachment_72688\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" loading=\"lazy\" class=\"width-fit size-large wp-image-72688 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=1024&#038;fit=1024%2C1024\" alt=\"Top-level findings that show GitHub Copilot helps developers code faster, completes up to 46% of code, and leaves developers feeling more fulfilled at work.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">Top-level findings that show GitHub Copilot helps developers code faster, completes up to 46% of code, and leaves developers feeling more fulfilled at work.</figcaption></figure>\n<h2 id=\"our-impact-with-github-copilot-for-business\">Our impact with GitHub Copilot for Business<a href=\"#our-impact-with-github-copilot-for-business\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Our impact with GitHub Copilot for Business\"></a></h2>\n<p>The economic impact of generative AI over the next decade will be profound—and we’re already seeing large-scale adoption of AI coding tools like GitHub Copilot by developers and companies. In a recent survey, 92% of developers said they use AI tools both in and outside of work, which underscores how quickly these tools are redefining the <a href=\"https://github.blog/2023-06-13-survey-reveals-ais-impact-on-the-developer-experience/\">overall developer experience</a>.</p>\n<p><a href=\"https://github.blog/2023-02-14-github-copilot-for-business-is-now-available/\">We launched GitHub Copilot for Business</a> earlier this year to bring the power of generative AI to organizations of all sizes, regardless of whether they use GitHub to build software. Three months later, more than 10,000 companies were already using it—and today, more than 20,000 organizations are using GitHub Copilot for Business.</p>\n<figure id=\"attachment_72690\" class=\"wp-caption aligncenter mx-0\"><img decoding=\"async\" loading=\"lazy\" class=\"width-fit size-large wp-image-72690 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=1024&#038;fit=1024%2C1024\" alt=\"More than 20,000 organizations are using Copilot for Business to accelerate their developers’ progress.\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=1999 1999w, https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=1024&#038;fit=1024%2C1024 1024w, https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">More than 20,000 organizations are using Copilot for Business to accelerate their developers’ progress.</figcaption></figure>\n<p>And companies that use GitHub Copilot are seeing real results. Engineering teams at Duolingo, for instance, have <a href=\"https://github.com/customer-stories/duolingo\">used GitHub Copilot for Business to achieve a 25% increase in developer velocity</a>. “With GitHub Copilot, our developers stay in the flow state and keep momentum instead of clawing through code libraries or documentation,” says Johnathan Burket, a senior engineering manager at Duolingo.</p>\n<p>Apart from this, we are increasingly seeing organizations require their applicants to test for software development jobs with GitHub Copilot, suggesting that AI pair programming will become a standard tool for testing applicants. This means that learning <em>how</em> to use generative AI tools will soon become a core competency of a software developer.</p>\n<h2 id=\"an-inextricable-link\">An inextricable link<a href=\"#an-inextricable-link\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"An inextricable link\"></a></h2>\n<p>What we draw from all this is that generative AI is turbocharging developer productivity with gains that will ultimately drive a boom in GDP for the global economy and, in turn, a surge in demand for software developers. We’ve seen this throughout the history of developer tool innovations from compilers to open source, and we’re already seeing that again with GitHub Copilot and soon <a href=\"https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/\">GitHub Copilot X</a>. One year later, we’ve realized this collision of AI and the software developer will not lead to a decrease in developer jobs—it will lead to AI augmenting developer potential and accelerating human progress.</p>\n<p>As more developers adopt generative AI tools and <a href=\"https://github.blog/2023-06-20-how-to-write-better-prompts-for-github-copilot/\">become fluent in the skill set of prompting with a copilot</a>, it is clear that this new way of software development has created an inextricable link between humankind and artificial intelligence that could well define how the world’s software is built for generations to come.</p>\n<p>And the world will be all the better for it.</p>\n<h3 id=\"learn-more-about-the-economic-impact-of-generative-ai\">Learn more about the economic impact of generative AI<a href=\"#learn-more-about-the-economic-impact-of-generative-ai\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Learn more about the economic impact of generative AI\"></a></h3>\n<p><a href=\"https://arxiv.org/abs/2306.15033\">Get our latest research</a> with Keystone.AI into the economic impact of generative AI. You can also <a href=\"https://www.youtube.com/watch?v=lFdbHW-8Nhc&#038;t=10086s\">see the recording</a> of our keynote session at Collision.</p>\n",
    "Permalink": "https://github.blog/2023-06-27-the-economic-impact-of-the-ai-powered-developer-lifecycle-and-lessons-from-github-copilot/",
    "Links": [
      "https://github.blog/2022-06-21-github-copilot-is-generally-available-to-all-developers/",
      "https://arxiv.org/abs/2306.15033",
      "https://arxiv.org/abs/2302.06590",
      "https://github.blog/2022-09-07-research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/",
      "https://github.blog/2023-02-14-github-copilot-for-business-is-now-available/",
      "https://github.blog/2023-06-13-survey-reveals-ais-impact-on-the-developer-experience/",
      "https://github.com/customer-stories/duolingo",
      "https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/",
      "https://github.blog/2023-06-20-how-to-write-better-prompts-for-github-copilot/",
      "https://www.youtube.com/watch?v=lFdbHW-8Nhc&t=10086s"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/06/image5-1.png?w=1024&fit=1024%2C1024",
      "https://github.blog/wp-content/uploads/2023/06/image3-3.png?w=1024&fit=1024%2C1024",
      "https://github.blog/wp-content/uploads/2023/06/image7-2.png?w=1024&fit=1024%2C1024",
      "https://github.blog/wp-content/uploads/2023/06/image2-5.png?w=1024&fit=1024%2C1024",
      "https://github.blog/wp-content/uploads/2023/06/image1-3.png?w=1024&fit=1024%2C1024",
      "https://github.blog/wp-content/uploads/2023/06/image4-2.png?w=1024&fit=1024%2C1024"
    ]
  },
  {
    "Title": "New tool to secure your GitHub Actions",
    "Author": "Jaroslav Lobacevski",
    "TextSummary": "Introducing a new tool to monitor and control the permissions of the repository token for GitHub Actions.",
    "RawContent": "<p>We are excited to release a public beta of <a href=\"https://github.com/GitHubSecurityLab/actions-permissions\">actions-permissions</a>, a tool which monitors your GitHub Actions workflows and recommends the minimum permissions required to run them.</p>\n<p>Every GitHub workflow receives a temporary repository access token (GITHUB_TOKEN). These tokens originally had a very broad set of permissions with full read and write to the repository (except for pull requests from forks). In 2021, we introduced <a href=\"https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/\">a more fine grained permission model</a> for workflow tokens and today <a href=\"https://github.blog/changelog/2023-02-02-github-actions-updating-the-default-github_token-permissions-to-read-only/\">the default permissions for new repositories and organizations are set to read-only</a>. However, a significant number of workflows still use a write-all token due to default workflow permission settings without actually requiring write permissions. If you want to check if you are using a broad default permission for your workflow tokens, you can go to the repository (or organization) settings->actions and check the “Workflow permissions” section:</p>\n<p><img decoding=\"async\" loading=\"lazy\" src=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=1024&#038;resize=1024%2C253\" alt=\"A screenshot of the menu for setting your repository&#039;s &quot;Workflow permissions.&quot; This is found under repository settings--actions. Changing this to read-only (the second radio button in the screenshot) is a security best practice.\" width=\"1024\" height=\"253\" class=\"aligncenter size-large wp-image-72668 width-fit\" srcset=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=1600 1600w, https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=1024&#038;resize=1024%2C253 1024w, https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n<p>While changing this setting to read-only is a best security practice, it may potentially break existing workflows which currently “just work” with write-all permissions. Applying the least privilege security principle and assigning the minimal needed permissions for the repository token in every workflow case by case can also be a potentially breaking change because complex workflows may include multiple actions and it is easy to miss a permission required for the workflow to function properly. Because workflows can execute a variety of steps, pending error and success criteria, it is also challenging to uncover the full privilege set required for more complicated workflow definitions.</p>\n<p>To help you more smoothly navigate the transition to a least-privilege workflow token model, we have published a set of GitHub Actions that allow you to monitor and enumerate the set of privileges that are required by a given GitHub workflow.</p>\n<p>The <a href=\"https://github.com/GitHubSecurityLab/actions-permissions/tree/main/monitor\">Monitor action</a> installs a local proxy (no information is sent to any third parties) into your workflow runner, collects information about any GitHub API interactions initiated by the workflow, and then displays the recommended minimal permissions as part of a workflow run summary:</p>\n<p><img decoding=\"async\" loading=\"lazy\" src=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=1024&#038;resize=1024%2C871\" alt=\"Screenshot of the output from the Monitor action displaying the minimal required permissions for the given repository.\" width=\"1024\" height=\"871\" class=\"aligncenter size-large wp-image-72669 width-fit\" srcset=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=1540 1540w, https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=1024&#038;resize=1024%2C871 1024w, https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=1536 1536w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n<p>The <a href=\"https://github.com/GitHubSecurityLab/actions-permissions/tree/main/advisor\">Advisor action</a>, which you can also use as a local tool, is able to summarize the recommendations from multiple runs of the workflow:</p>\n<p><img decoding=\"async\" loading=\"lazy\" src=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=300&#038;resize=300%2C275\" alt=\"\" width=\"300\" height=\"275\" class=\"aligncenter size-medium wp-image-72670 width-fit\" srcset=\"https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=1346 1346w, https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=300&#038;resize=300%2C275 300w, https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=1024 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\"></p>\n<p>Once you apply the recommended permissions in the workflow you can stop using the tools. Any newly required permissions for future iterations of your workflow can be added as needed.</p>\n<p>We are excited to make the beta of our permission monitoring GitHub Actions available to you and hope they will help you transition to a more secure workflow permission model. Please give them a try and <a href=\"https://github.com/GitHubSecurityLab/actions-permissions/discussions\">share your feedback with us</a>!</p>\n",
    "Permalink": "https://github.blog/2023-06-26-new-tool-to-secure-your-github-actions/",
    "Links": [
      "https://github.com/GitHubSecurityLab/actions-permissions",
      "https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/",
      "https://github.blog/changelog/2023-02-02-github-actions-updating-the-default-github_token-permissions-to-read-only/",
      "https://github.com/GitHubSecurityLab/actions-permissions/tree/main/monitor",
      "https://github.com/GitHubSecurityLab/actions-permissions/tree/main/advisor",
      "https://github.com/GitHubSecurityLab/actions-permissions/discussions"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/06/actions-tool-3.png?w=1024&resize=1024%2C253",
      "https://github.blog/wp-content/uploads/2023/06/actions-tool-1.png?w=1024&resize=1024%2C871",
      "https://github.blog/wp-content/uploads/2023/06/actions-tool-2.png?w=300&resize=300%2C275"
    ]
  },
  {
    "Title": "Open Source challenge results from Gamedev.js Jam 2023",
    "Author": "Andrzej Mazur",
    "TextSummary": "Highlighting 13 of the top games plus source from the latest Gamedev.js jam–by GitHub Star and event organizer, Andrzej Mazur.",
    "RawContent": "<p><i><span style=\"font-weight: 400;\">This is a guest post by </span></i><a href=\"https://stars.github.com/profiles/end3r/\"><i><span style=\"font-weight: 400;\">GitHub Star, @end3r</span></i></a><i><span style=\"font-weight: 400;\">. Andrzej Mazur is a </span></i><a href=\"https://end3r.com/\"><i><span style=\"font-weight: 400;\">web game developer</span></i></a><i><span style=\"font-weight: 400;\"> and technical evangelist, founder of the </span></i><a href=\"https://enclavegames.com/\"><i><span style=\"font-weight: 400;\">Enclave Games</span></i></a><i><span style=\"font-weight: 400;\"> indie studio, creator of the </span></i><a href=\"https://js13kgames.com/\"><i><span style=\"font-weight: 400;\">js13kGames</span></i></a><i><span style=\"font-weight: 400;\"> competition, and builder of the </span></i><a href=\"https://gamedevjs.com/\"><i><span style=\"font-weight: 400;\">Gamedev.js</span></i></a><i><span style=\"font-weight: 400;\"> community.</span></i></p>\n<p><span style=\"font-weight: 400;\">The </span><a href=\"https://gamedevjs.com/\"><span style=\"font-weight: 400;\">Gamedev.js</span></a><span style=\"font-weight: 400;\"> community started around the year 2012, but mostly revolved around </span><a href=\"https://gamedevjs.pl/\"><span style=\"font-weight: 400;\">local meetups</span></a><span style=\"font-weight: 400;\"> at the beginning. First international attempts were made with the global </span><a href=\"https://gamedevjsweekly.com/\"><span style=\"font-weight: 400;\">Gamedev.js Weekly</span></a><span style=\"font-weight: 400;\"> newsletter in 2014, yet we had to wait until 2020 for the </span><a href=\"https://gamedevjs.com/jam/2020/\"><span style=\"font-weight: 400;\">first Gamedev.js Jam</span></a><span style=\"font-weight: 400;\"> to happen. The </span><a href=\"https://gamedevjs.com/jam/2022/\"><span style=\"font-weight: 400;\">third edition</span></a><span style=\"font-weight: 400;\"> held in 2022 was the first to ask the developers to (optionally) provide the sources of their games. That turned out as a </span><a href=\"https://github.blog/2022-05-31-top-games-source-code-from-gamedev-js-jam-2022/\"><span style=\"font-weight: 400;\">great success</span></a><span style=\"font-weight: 400;\">—out of 95 submitted games, 27 provided their source code on GitHub.</span></p>\n<p><span style=\"font-weight: 400;\">Fast forward twelve months to April this year and the participants of </span><a href=\"https://gamedevjs.com/jam/2023/\"><span style=\"font-weight: 400;\">Gamedev.js Jam 2023</span></a><span style=\"font-weight: 400;\"> submitted </span><a href=\"https://itch.io/jam/gamedevjs-2023/entries\"><span style=\"font-weight: 400;\">201 games</span></a><span style=\"font-weight: 400;\">, out of which 91 joined the official </span><a href=\"https://gamedevjs.com/jam/2023/#challenge-opensource\"><span style=\"font-weight: 400;\">Open Source challenge</span></a><span style=\"font-weight: 400;\"> and provided their sources on GitHub. Below is the </span><a href=\"https://itch.io/jam/gamedevjs-2023/results/open-source\"><span style=\"font-weight: 400;\">best 13</span></a><span style=\"font-weight: 400;\"> selected by the dedicated experts, </span><a href=\"https://github.com/mishmanners\"><span style=\"font-weight: 400;\">Michelle Mannering</span></a><span style=\"font-weight: 400;\">, </span><a href=\"https://github.com/mypoint13k\"><span style=\"font-weight: 400;\">Ewa Mazur</span></a><span style=\"font-weight: 400;\">, and </span><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Ania Kubów</span></a><span style=\"font-weight: 400;\">:</span></p>\n<h2 id=\"1-ratatime\">1. Ratatime<a href=\"#1-ratatime\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"1. Ratatime\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72629 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/rattatime.gif?resize=1000%2C561\" alt=\"Screenshot of Rattatime.\" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://buymybeard.itch.io/ratatime\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/BuyMyBeard/Ratatime\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3E8223\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Unity              </span>\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#178600\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                C#              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/BuyMyBeard\" target=\"_blank\" arial-label=\"@BuyMyBeard\" title=\"@BuyMyBeard\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/95039323?v=4&#038;s=64\" alt=\"@BuyMyBeard\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>This game was very well thought out in all aspects. From everything to game play, to game design and music. The game play was also easy and enjoyable. As an overall package I would give it high scores.</em>&#8221; &#8211; <a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"2-time-rush\">2. Time Rush<a href=\"#2-time-rush\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"2. Time Rush\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72273 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/time-rush.png?resize=1000%2C561\" alt=\"Screenshot of Time Rush.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/time-rush.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/time-rush.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/time-rush.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://m0hm0h.itch.io/time-rush\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/M0HM0H/Time-Rush\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#f1e05a\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                JavaScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/M0HM0H\" target=\"_blank\" arial-label=\"@M0HM0H\" title=\"@M0HM0H\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/131825319?v=4&#038;s=64\" alt=\"@M0HM0H\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>Really cool, complete and very polished platform game. Music makes it dynamic, controls work fantastic. I love all the little details like moving background, character particles, time shaking, when it&#8217;s almost run out. Everything is just perfect. Graphics complete the game mood &#8211; fantastic job.</em>&#8221; &#8211; Ewa Mazur</p>\n<h2 id=\"3-latency\">3. Latency<a href=\"#3-latency\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3. Latency\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72628 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/latency.png?resize=1000%2C561\" alt=\"Latency screenshot.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/latency.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/latency.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/latency.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://slickle.itch.io/latency\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/DanielKilgallon/Latency-Game\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#ededed\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Godot              </span>\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#355570\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                GDScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/DanielKilgallon\" target=\"_blank\" arial-label=\"@DanielKilgallon\" title=\"@DanielKilgallon\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/15825445?v=4&#038;s=64\" alt=\"@DanielKilgallon\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>This game had cute graphics and a simple game play which allowed me to start playing instantly. But do not be deceived, passing to the next level is harder than it looks!</em>&#8221; &#8211; <a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"4-on-time\">4. On Time<a href=\"#4-on-time\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"4. On Time\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72136 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/on-time.gif?resize=1000%2C561\" alt=\"On Time screenshot \" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://breixogames.itch.io/on-time\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/BreixoGames/OnTime\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#f1e05a\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                JavaScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/BreixoGames\" target=\"_blank\" arial-label=\"@BreixoGames\" title=\"@BreixoGames\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/134383901?v=4&#038;s=64\" alt=\"@BreixoGames\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>The graphic are fantastic. You definitely build the mood of the city in rush hours very well. The game is complete, fun to play, nothing to add.</em>&#8221; &#8211; Ewa Mazur</p>\n<h2 id=\"5-chrono-blaster\">5. Chrono Blaster<a href=\"#5-chrono-blaster\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"5. Chrono Blaster\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72274 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/chrono-blastaer.png?resize=1000%2C561\" alt=\"Screenshot of Chrono Blaster.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/chrono-blastaer.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/chrono-blastaer.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/chrono-blastaer.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://ovk.itch.io/chronoblaster\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/ovk/chronoblaster\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3178c6\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                TypeScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/ovk\" target=\"_blank\" arial-label=\"@ovk\" title=\"@ovk\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/693072?v=4&#038;s=64\" alt=\"@ovk\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>Really enjoyed the graphics and color scheme in this game. In addition to this the movements were super smooth which matched the overall ambience and provided an enjoyable game experience.</em>&#8221; &#8211; <a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"6-timeshifter\">6. Timeshifter<a href=\"#6-timeshifter\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"6. Timeshifter\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72627 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/timeshifter-1.png?resize=1000%2C561\" alt=\"Timeshifter screenshot.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/timeshifter-1.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/timeshifter-1.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/timeshifter-1.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://ikmalsaid.itch.io/timeshifter\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/ikmalsaid/GDevelop-TimeShifter\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#ededed\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                GDevelop              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/ikmalsaid\" target=\"_blank\" arial-label=\"@ikmalsaid\" title=\"@ikmalsaid\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/35127268?v=4&#038;s=64\" alt=\"@ikmalsaid\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>I enjoy a logic game and this one was delightful! The timer added an extra layer of pressure which I thought was a good touch.</em>&#8221; &#8211;\u00A0<a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"7-chrono-robot\">7. Chrono Robot<a href=\"#7-chrono-robot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"7. Chrono Robot\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72137 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/chrono-robot.gif?resize=1000%2C561\" alt=\"Chrono Robot screenshot \" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://maximeeuziere.itch.io/chrono-robot\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/xem/gamedevjs2023\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#f1e05a\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                JavaScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/xem\" target=\"_blank\" arial-label=\"@xem\" title=\"@xem\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/1225909?v=4&#038;s=64\" alt=\"@xem\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p><em>&#8220;Having to time your movements in order to be able to work with them in the &#8216;future&#8217; is always a fun spin in games. The dev leaderboard is also a nice touch.&#8221;\u00A0 </em>&#8211; <a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"7-time-saver\">7. Time Saver<a href=\"#7-time-saver\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"7. Time Saver\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72138 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/time-saver.gif?resize=1000%2C561\" alt=\"Time Saver screenshot\" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://openworldera.itch.io/time-saver\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/OpenWorldEra/TimeSaver\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3E8223\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Unity              </span>\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#178600\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                C#              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/OpenWorldEra\" target=\"_blank\" arial-label=\"@OpenWorldEra\" title=\"@OpenWorldEra\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/124695895?v=4&#038;s=64\" alt=\"@OpenWorldEra\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>It was very hard for me to play the game, but still I love the idea and the look of it. Game mood is very well done &#8211; all game elements are building it &#8211; music fits to graphics, graphics fits to task, animations making it all complete. And I love the idea of literally saving time. Great job</em>&#8221; &#8211; Ewa Mazur</p>\n<h2 id=\"9-chrono-guards\">9. Chrono Guards<a href=\"#9-chrono-guards\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"9. Chrono Guards\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72621 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/chrono-blastaer-1.png?resize=1000%2C561\" alt=\"Screenshot of Chrono Blaster.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/chrono-blastaer-1.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/chrono-blastaer-1.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/chrono-blastaer-1.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://omhet.itch.io/chrono-guards\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/Omhet/gamedevjs-jam-2023\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3178c6\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                TypeScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/Omhet\" target=\"_blank\" arial-label=\"@Omhet\" title=\"@Omhet\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/33632745?v=4&#038;s=64\" alt=\"@Omhet\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>Easy to play, really nice game, yet the idea of it is very well fitting to the game jam theme. I like how the graphics make it a little bit magical. Maybe I would think of some more delicate details, like some particles, lightning or something like this, so the mood of the game would be even more magical. but it&#8217;s just details &#8211; the game is very cool right now.</em>&#8221; &#8211; Ewa Mazur</p>\n<h2 id=\"9-toki\">9. Toki<a href=\"#9-toki\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"9. Toki\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72139 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/toki.gif?resize=1000%2C561\" alt=\"Toki screenshot\" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://johnonym.itch.io/toki\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/johnedvard/gamedevjs2023-toki\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3178c6\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Typescript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/johnedvard\" target=\"_blank\" arial-label=\"@johnedvard\" title=\"@johnedvard\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/656024?v=4&#038;s=64\" alt=\"@johnedvard\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>The movements to this game were very smooth and pleasant to play. There were also unique game tools at the user’s disposal on top of the normal &#8216;jump&#8217; and &#8216;shoot&#8217;.</em>&#8221; &#8211; <a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"11-the-bow-fighters\">11. The Bow Fighters<a href=\"#11-the-bow-fighters\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"11. The Bow Fighters\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72626 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/bow-fighter.gif?resize=1000%2C561\" alt=\"Screenshot of Bow Fighters.\" width=\"1000\" height=\"561\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://raffie.itch.io/the-bow-fighters\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/RaffiesGames/the-bow-fighters\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3178c6\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                TypeScript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/RaffiesGames\" target=\"_blank\" arial-label=\"@RaffiesGames\" title=\"@RaffiesGames\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/32974129?v=4&#038;s=64\" alt=\"@RaffiesGames\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>What touched my heart was that the game looked really nice. It was a little bit hard for me to discover how to play (I&#8217;m not reading the instructions), but then the game was really good.</em>&#8221; &#8211; Ewa Mazur</p>\n<h2 id=\"12-time-warp\">12. Time Warp<a href=\"#12-time-warp\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"12. Time Warp\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72622 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/time-warp-1.png?resize=1000%2C561\" alt=\"Screenshot of Time Warp.\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/time-warp-1.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/time-warp-1.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/time-warp-1.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://tsapper.itch.io/time-warp\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/Tsapper/Timegame\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3E8223\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Unity              </span>\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#178600\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                C#              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/Tsapper\" target=\"_blank\" arial-label=\"@Tsapper\" title=\"@Tsapper\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/112331334?v=4&#038;s=64\" alt=\"@Tsapper\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>In this game the added complexity of traveling in time added many layers to this game. I enjoy when a game looks simple and minimalistic, but in reality is a lot more complex, whilst also remaining easy to play. This game did just that.</em>&#8221; &#8211;<a href=\"https://github.com/kubowania\">Ania </a><a href=\"https://github.com/kubowania\"><span style=\"font-weight: 400;\">Kubów</span></a></p>\n<h2 id=\"13-birds\">13. Birds!<a href=\"#13-birds\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"13. Birds!\"></a></h2>\n<div class=\"project-bar mt-0 mb-3\">\n      \n<p><img decoding=\"async\" loading=\"lazy\" class=\"width-fit aligncenter wp-image-72623 size-full\" src=\"https://github.blog/wp-content/uploads/2023/05/birds.png?resize=1000%2C561\" alt=\"Screenshot of Birds!\" width=\"1000\" height=\"561\" srcset=\"https://github.blog/wp-content/uploads/2023/05/birds.png?resize=1000%2C561?w=1000 1000w, https://github.blog/wp-content/uploads/2023/05/birds.png?resize=1000%2C561?w=300 300w, https://github.blog/wp-content/uploads/2023/05/birds.png?resize=1000%2C561?w=768 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n    <div class=\"d-flex flex-row flex-wrap flex-items-center\">\n          <div class=\"d-flex flex-row flex-items-center width-full width-md-auto mt-2\">\n                  <a class=\"btn-mktg btn-small-mktg d-block mr-2 width-full width-md-auto\" href=\"https://stiggstogg.itch.io/time\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M9.5 15.584V8.416a.5.5 0 01.77-.42l5.576 3.583a.5.5 0 010 .842l-5.576 3.584a.5.5 0 01-.77-.42z\"></path><path fill-rule=\"evenodd\" d=\"M12 2.5a9.5 9.5 0 100 19 9.5 9.5 0 000-19zM1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12z\"></path></svg>\n            Play          </a>\n        \n                  <a class=\"btn-mktg btn-small-mktg btn-muted-mktg d-block mr-md-2 width-full width-md-auto\" href=\"https://github.com/Stiggstogg/time\" target=\"_blank\">\n            <svg class=\"octicon d-inline-block mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            Source          </a>\n        \n                  <div class=\"d-none d-md-flex flex-row mr-2 mr-lg-3\">\n                          <svg class=\"d-block mx-1\" title=\"Web\" aria-title=\"Web\" width=\"18\" height=\"18\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"currentColor\">\n                                  <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12m2.557 16h-5.115c.546 2.46 1.441 4.114 2.558 5.744 1.194-1.741 2.041-3.41 2.557-5.744m-7.157 0h-4.567c1.236 2.825 3.704 4.972 6.755 5.716-1.048-1.733-1.783-3.658-2.188-5.716m13.767 0h-4.567c-.391 1.988-1.095 3.887-2.175 5.694 3.012-.763 5.517-2.895 6.742-5.694m-14.005-6h-4.962c-.267 1.313-.267 2.685 0 4h4.915c-.119-1.329-.101-2.672.047-4m7.661 0h-5.647c-.165 1.326-.185 2.672-.053 4h5.753c.133-1.328.111-2.673-.053-4m6.977 0h-4.963c.148 1.328.166 2.671.048 4h4.915c.26-1.285.273-2.648 0-4m-12.156-7.729c-3.077.732-5.567 2.886-6.811 5.729h4.653c.435-2.042 1.178-3.985 2.158-5.729m2.355-.048c-1.089 1.77-1.91 3.453-2.463 5.777h4.927c-.534-2.246-1.337-3.948-2.464-5.777m2.368.069c1.013 1.812 1.733 3.76 2.146 5.708h4.654c-1.232-2.816-3.762-4.958-6.8-5.708\"></path>\n                \n                \n                \n                              </svg>\n                      </div>\n              </div>\n    \n          <div class=\"d-flex flex-row flex-items-center mt-2\" style=\"flex-grow: 1;\">\n                  <div class=\"d-flex flex-row flex-wrap text-semibold f5-mktg\">\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#ededed\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Phaser              </span>\n                          <span class=\"d-flex flex-row flex-items-center mr-1 my-1\">\n                <svg class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"#3178c6\"><path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path></svg>\n                Typescript              </span>\n                      </div>\n        \n                  <div class=\"d-flex flex-row flex-wrap ml-auto f5-mktg\">\n                          <div class=\"my-1 ml-2\">\n                <a href=\"https://github.com/Stiggstogg\" target=\"_blank\" arial-label=\"@Stiggstogg\" title=\"@Stiggstogg\">\n                                      <img class=\"d-block circle height-auto\" width=\"24\" height=\"24\" src=\"https://avatars.githubusercontent.com/u/53380538?v=4&#038;s=64\" alt=\"@Stiggstogg\">\n                                  </a>\n              </div>\n                      </div>\n              </div>\n      </div>\n</div>\n\n<p>&#8220;<em>Fun, great and creative implementation of the theme. Consistent graphics. Clever, addictive. A convincing story.</em>&#8221; &#8211; Ewa Mazur</p>\n<p><span style=\"font-weight: 400;\">Congratulations to the </span><a href=\"https://gamedevjs.com/competitions/gamedev-js-jam-2023-winners-announced/\"><span style=\"font-weight: 400;\">best entries</span></a><span style=\"font-weight: 400;\"> and thank you all who participated—you can see the list of </span><a href=\"https://itch.io/c/3292385/gamedevjs-jam-2023-open-source\"><span style=\"font-weight: 400;\">91 entries</span></a><span style=\"font-weight: 400;\"> submitted to the Open Source Challenge on Itch this year.</span></p>\n<p><span style=\"font-weight: 400;\">Don&#8217;t forget to join </span><a href=\"https://itch.io/jam/gamedevjs-2024\"><span style=\"font-weight: 400;\">Gamedev.js Jam 2024 on itch</span></a><span style=\"font-weight: 400;\"> already to not miss anything, jump into </span><a href=\"https://gamedevjs.com/discord\"><span style=\"font-weight: 400;\">our Discord</span></a><span style=\"font-weight: 400;\"> if you&#8217;d like to talk with fellow devs, follow </span><a href=\"https://twitter.com/GamedevJS\"><span style=\"font-weight: 400;\">@Gamedevjs on Twitter</span></a><span style=\"font-weight: 400;\">, subscribe to the </span><a href=\"https://gamedevjsweekly.com/\"><span style=\"font-weight: 400;\">Gamedev.js Weekly</span></a><span style=\"font-weight: 400;\"> newsletter to be uptodate with all the latest news, and buy some cool swag from </span><a href=\"https://gamedevjs.com/shop\"><span style=\"font-weight: 400;\">Gamedev.js Shop</span></a><span style=\"font-weight: 400;\"> if you&#8217;d like to proudly represent the community and support it at the same time!</span></p>\n<p><a href=\"https://gamedevjs.myspreadshop.com/\"><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-72267 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128\" alt=\"Buy yourself a T-shirt\" width=\"1024\" height=\"128\" srcset=\"https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128?w=1200 1200w, https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128?w=300 300w, https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128?w=768 768w, https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128?w=1024 1024w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></a></p>\n<p><span style=\"font-weight: 400;\">Last, but not least—there’s the upcoming </span><a href=\"https://js13kgames.com/\"><span style=\"font-weight: 400;\">js13kGames 2023</span></a><span style=\"font-weight: 400;\"> where sharing the sources on GitHub is mandatory to participate since the very beginning in 2012. Remember that by </span><a href=\"https://github.blog/2021-10-05-13-tiny-and-terrific-entries-from-the-js13kgames-competition/\"><span style=\"font-weight: 400;\">sharing sources of your entries</span></a><span style=\"font-weight: 400;\"> you&#8217;re helping other devs build better games and push the whole community forward!</span></p>\n",
    "Permalink": "https://github.blog/2023-06-21-gamedev-js-2023/",
    "Links": [
      "https://stars.github.com/profiles/end3r/",
      "https://end3r.com/",
      "https://enclavegames.com/",
      "https://js13kgames.com/",
      "https://gamedevjs.com/",
      "https://gamedevjs.pl/",
      "https://gamedevjsweekly.com/",
      "https://gamedevjs.com/jam/2020/",
      "https://gamedevjs.com/jam/2022/",
      "https://github.blog/2022-05-31-top-games-source-code-from-gamedev-js-jam-2022/",
      "https://gamedevjs.com/jam/2023/",
      "https://itch.io/jam/gamedevjs-2023/entries",
      "https://itch.io/jam/gamedevjs-2023/results/open-source",
      "https://github.com/mishmanners",
      "https://github.com/mypoint13k",
      "https://github.com/kubowania",
      "https://buymybeard.itch.io/ratatime",
      "https://github.com/BuyMyBeard/Ratatime",
      "https://github.com/BuyMyBeard",
      "https://m0hm0h.itch.io/time-rush",
      "https://github.com/M0HM0H/Time-Rush",
      "https://github.com/M0HM0H",
      "https://slickle.itch.io/latency",
      "https://github.com/DanielKilgallon/Latency-Game",
      "https://github.com/DanielKilgallon",
      "https://breixogames.itch.io/on-time",
      "https://github.com/BreixoGames/OnTime",
      "https://github.com/BreixoGames",
      "https://ovk.itch.io/chronoblaster",
      "https://github.com/ovk/chronoblaster",
      "https://github.com/ovk",
      "https://ikmalsaid.itch.io/timeshifter",
      "https://github.com/ikmalsaid/GDevelop-TimeShifter",
      "https://github.com/ikmalsaid",
      "https://maximeeuziere.itch.io/chrono-robot",
      "https://github.com/xem/gamedevjs2023",
      "https://github.com/xem",
      "https://openworldera.itch.io/time-saver",
      "https://github.com/OpenWorldEra/TimeSaver",
      "https://github.com/OpenWorldEra",
      "https://omhet.itch.io/chrono-guards",
      "https://github.com/Omhet/gamedevjs-jam-2023",
      "https://github.com/Omhet",
      "https://johnonym.itch.io/toki",
      "https://github.com/johnedvard/gamedevjs2023-toki",
      "https://github.com/johnedvard",
      "https://raffie.itch.io/the-bow-fighters",
      "https://github.com/RaffiesGames/the-bow-fighters",
      "https://github.com/RaffiesGames",
      "https://tsapper.itch.io/time-warp",
      "https://github.com/Tsapper/Timegame",
      "https://github.com/Tsapper",
      "https://stiggstogg.itch.io/time",
      "https://github.com/Stiggstogg/time",
      "https://github.com/Stiggstogg",
      "https://gamedevjs.com/competitions/gamedev-js-jam-2023-winners-announced/",
      "https://itch.io/c/3292385/gamedevjs-jam-2023-open-source",
      "https://itch.io/jam/gamedevjs-2024",
      "https://gamedevjs.com/discord",
      "https://twitter.com/GamedevJS",
      "https://gamedevjs.com/shop",
      "https://gamedevjs.myspreadshop.com/",
      "https://github.blog/2021-10-05-13-tiny-and-terrific-entries-from-the-js13kgames-competition/"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/05/rattatime.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/95039323?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/time-rush.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/131825319?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/latency.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/15825445?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/on-time.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/134383901?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/chrono-blastaer.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/693072?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/timeshifter-1.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/35127268?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/chrono-robot.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/1225909?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/time-saver.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/124695895?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/chrono-blastaer-1.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/33632745?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/toki.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/656024?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/bow-fighter.gif?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/32974129?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/time-warp-1.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/112331334?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/birds.png?resize=1000%2C561",
      "https://avatars.githubusercontent.com/u/53380538?v=4&s=64",
      "https://github.blog/wp-content/uploads/2023/05/t-shirt.png?resize=1024%2C128"
    ]
  },
  {
    "Title": "Bridging code and community",
    "Author": "Martin Woodward",
    "TextSummary": "Explore the impact of non-code contributions—and why they are often undervalued, the challenges of using open source in regulated environments, and the art of managing projects at the scale of Kubernetes, now on The ReadME Podcast.",
    "RawContent": "<p><em>Subscribe to <a href=\"https://gh.io/AAkt3lf\">The ReadME Podcast</a> on <a href=\"https://podcasts.apple.com/us/podcast/the-readme-podcast/id1567016194\">Apple Podcasts</a>, <a href=\"https://open.spotify.com/show/660KitvdJDX2vUmioAbwSQ\">Spotify</a>, or wherever you listen to podcasts.</em></p>\n<p class=\"purple-text text-gradient-purple-coral mt-6 mb-6\">“People often speak dismissively of pull requests that fix a typo or a broken link. But the friction caused by these issues distracts from the intent of your project,” says Sarah Rainsberger. “There are so many ways to contribute to the overall experience of the people using your project that don&#8217;t involve code. These improvements help people enjoy using your project.”</p>\n<p><a href=\"https://github.com/readme/podcast/code-and-community\">The ReadME Podcast’s June episode</a> explores the value of non-code contributions—and why they are often undervalued, the challenges of using open source in regulated environments, and the art of managing projects at the scale of Kubernetes. Our first guest, Kyler Middleton, joins to talk about her journey in technology from farming to pharmaceuticals, the pivotal role of Terraform in facilitating infrastructure sharing, and the myth that contributing to open source means compromising your organization’s security.</p>\n<p>Later on, senior editor of The ReadME Project, Klint Finley, is back on the podcast to shed light on the crucial yet often under-appreciated non-code contributions to open source projects. He highlights the pivotal roles that technical writers, community managers, marketers, release coordinators, and graphic designers—among many others—play in shaping the success of a project. Featuring insights from Sarah Rainesberger, a core contributor to the <a href=\"https://astro.build/\">Astro web UI framework</a>, this conversation underscores the importance of improved documentation and embracing community support.</p>\n<p>Plus, hear more from our conversation with Kelsey Hightower, about the complexity of scaling projects like <a href=\"https://kubernetes.io/\">Kubernetes</a> (hint, it’s not just the code).</p>\n<div class=\"content-table-wrap\"><table>\n<tr>\n<td><a href=\"https://github.com/readme/podcast/code-and-community\">Bridging code and community</a>\n   </td>\n<td>Navigating open source in a regulated environment, the crucial role of non-code contributions to open source success, and lessons from scaling projects like Kubernetes.\n   </td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/readme/podcast/kelsey-hightower\">Kelsey Hightower—Present</a>\n   </td>\n<td>In this special episode, Kelsey shares his origin story, insights on the future of Kubernetes, and advice on making complicated technology easier to understand.\n   </td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/readme/podcast/open-closed-equilibrium\">The open/closed equilibrium</a>\n   </td>\n<td>Striking a balance between openness and control in open source projects, preserving the integrity of community insights, and how humor can transform communities.\n   </td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/readme/podcast/nuclear-fusion\">Fusing tech and progress</a>\n   </td>\n<td>How open source is powering nuclear fusion research, advice for fortifying your career against change, and practical tips on using GitHub.\n   </td>\n</tr>\n</table></div>\n<p>To hear all this, and more, tune in to this month&#8217;s episode of The ReadME Podcast. Plus, join us next month when we will be discussing shifts in programming language paradigms and what happens when the pendulum swings too far. Don’t miss out! Subscribe to <a href=\"https://gh.io/AAkt3lf\">The ReadME Podcast</a> now on <a href=\"https://podcasts.apple.com/us/podcast/the-readme-podcast/id1567016194\">Apple Podcasts</a>, <a href=\"https://open.spotify.com/show/660KitvdJDX2vUmioAbwSQ\">Spotify</a>, or wherever you listen to podcasts.</p>\n",
    "Permalink": "https://github.blog/2023-06-21-bridging-code-and-community/",
    "Links": [
      "https://gh.io/AAkt3lf",
      "https://podcasts.apple.com/us/podcast/the-readme-podcast/id1567016194",
      "https://open.spotify.com/show/660KitvdJDX2vUmioAbwSQ",
      "https://github.com/readme/podcast/code-and-community",
      "https://astro.build/",
      "https://kubernetes.io/",
      "https://github.com/readme/podcast/kelsey-hightower",
      "https://github.com/readme/podcast/open-closed-equilibrium",
      "https://github.com/readme/podcast/nuclear-fusion"
    ],
    "Media": []
  },
  {
    "Title": "Crafting a better, faster code view",
    "Author": "Joshua Brown",
    "TextSummary": "The new GitHub Code View brings users many new features to improve the code reading and exploration experiences, and we overcame a number of unique technical hurdles in order to deliver those features without compromising performance.",
    "RawContent": "<p>Reading code is not as simple as reading the text of a file end-to-end. It is a non-linear, sometimes chaotic process of jumping between files to follow a trail, building a mental picture of how code relates to its surrounding context. GitHub’s mission is to be the home for all developers, and reading code is one of the core experiences we offer. Every day, millions of users use GitHub to view and interact with code. So, about a year ago we set out to create a new code view that supports the entire code reading experience with features like a file tree, symbol navigation, code search integration, sticky lines, and code section folding. The new code view is powerful, intelligent, and interactive, but it is not an attempt to turn the repository browsing experience into an IDE.</p>\n<p>While building the new code view, our team had a few guiding principles on which we refused to compromise:</p>\n<ul>\n<li>It must add these powerful new features to transform how users read code on GitHub.</li>\n<li>It must be intuitive and easy to use for all of GitHub’s millions of users.</li>\n<li>It must be fast.</li>\n</ul>\n<h2 id=\"initial-efforts\">Initial efforts<a href=\"#initial-efforts\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Initial efforts\"></a></h2>\n<p>The first step was to build out the features we wanted in a natural, straightforward way, taking the advice that &#8220;premature optimization is the root of all evil.&#8221;<sup id=\"fnref-72597-1\"><a href=\"#fn-72597-1\" class=\"jetpack-footnote\" title=\"Read footnote.\">1</a></sup> After all, if simple code satisfactorily solves our problems, then we should stop there. We knew we wanted to build a highly interactive and stateful code viewing experience, so we decided to use React to enable us to iterate more quickly on the user interface. Our initial implementation for the code blob was dead-simple: our syntax highlighting service converted the raw file contents to a list of HTML strings corresponding to the lines of the file, and each of these lines was added to the document.</p>\n<p>There was one key problem: our performance scaled badly with the number of lines in the file. In particular, our <a href=\"https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/\">LCP</a> and <a href=\"https://developer.chrome.com/en/docs/lighthouse/performance/interactive/\">TTI</a> times measurably increased at around 500 lines, and this increase became noticeable at around 2,000 lines. Around those same thresholds, interactions like highlighting a line or collapsing a code section became similarly sluggish. We take these performance metrics seriously for a number of reasons. Most importantly, they are user-centric—that is, they are meant to measure aspects of the quality of a user’s experience on the page. On top of that, they are also part of how search engines like Google determine where to rank pages in their search results; fast pages get shown first, and the code view is one of the many ways GitHub’s users can show their work to the world.</p>\n<p>As we dug in, we discovered that there were a few things at play:</p>\n<ul>\n<li>When there are many DOM nodes on the page, style calculations and paints take longer.</li>\n<li>When there are many DOM nodes on the page, DOM queries take longer, and the results can have a significant memory footprint.</li>\n<li>When there are many React nodes on the page, renders and DOM reconciliation both take longer.</li>\n</ul>\n<p>It&#8217;s worth noting that none of these are problems with React specifically; any page with a very large DOM would experience the first two problems, and any solution where a large DOM is created and managed by JavaScript would experience the third.</p>\n<p>We mitigated these problems considerably by ensuring that we were not running these expensive operations more than necessary. Typical React optimization techniques like memoization and debouncing user input, as well as some less common solutions like pulling in an <a href=\"https://learn.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern\">observer pattern</a> went a long way toward ensuring that React state updates, and therefore DOM updates, only occurred as needed.</p>\n<p>Mitigating the problem, however, is not solving the problem. Even with all of these optimizations in place, the initial render of the page remained a fundamentally expensive operation for large files. In the repository that builds GitHub.com, for example, we have a CODEOWNERS file that is about 18,000 lines long, and pushes the 2MB size limit for displaying files in the UI. With no optimizations besides the ones described above, React’s first pass at building the DOM for this page takes nearly 27 seconds.<sup id=\"fnref-72597-2\"><a href=\"#fn-72597-2\" class=\"jetpack-footnote\" title=\"Read footnote.\">2</a></sup> Considering more than half of users will abandon a page if it loads for more than three seconds, there was obviously lots of work left to do.</p>\n<h2 id=\"a-promising-but-incomplete-solution\">A promising but incomplete solution<a href=\"#a-promising-but-incomplete-solution\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"A promising but incomplete solution\"></a></h2>\n<p>Enter virtualization. Virtualization is a performance optimization technique that examines the scroll state of the page to determine what content to include in the DOM. For example, if we are viewing a 10,000 line file but only about 75 lines fit on the screen at a time, we can save lots of time by only rendering the lines that fit in the viewport. As the user scrolls, we add any lines that need to appear, and remove any lines that can disappear, as illustrated by this demo.<sup id=\"fnref-72597-3\"><a href=\"#fn-72597-3\" class=\"jetpack-footnote\" title=\"Read footnote.\">3</a></sup></p>\n<p><video width=\"100%\" loop=\"\" controls=\"\" autoplay=\"\" muted=\"\"><source src=\"https://github.blog/wp-content/uploads/2023/06/virtualization-demo.mp4\" type=\"video/mp4\"></video></p>\n<p>This satisfies the most basic requirements of the page with flying colors. It loads on average more quickly than the existing experience, and the experience of scrolling through the file is nearly indistinguishable from the non-virtualized case. Remember that 27 second initial render? Virtualizing the file content gets that time down to under a second, and that number does not increase substantially even if we artificially remove our file size limit and pull in hundreds of megabytes of text.</p>\n<p>Unfortunately, virtualization is not a cure-all. While our initial implementation added features to the page at the expense of performance, naïvely virtualizing the code lines delivers a fast experience at the expense of vital functionality. The biggest problem was that without the entire text of the file on the page at once, the browser&#8217;s built-in find-in-file only surfaced results that are visible in the viewport. Breaking users’ ability to find text on the page breaks our hard requirement that the page remain intuitive and easy to use. Before we could ship any of this to real users, we had to ensure that this use case would be covered.</p>\n<p>The immediate solution was to implement our own version of find-in-file by implementing a custom handler for the <kbd>Ctrl</kbd>+<kbd>F</kbd> shortcut (⌘+<kbd>F</kbd> on Mac). We added a new piece of UI in the sidebar to show results as part of our integration with symbol navigation and code search.</p>\n<p><img decoding=\"async\" loading=\"lazy\" src=\"https://github.blog/wp-content/uploads/2023/06/image2-4.png?w=720&#038;resize=720%2C691\" alt=\"Screenshot of the &quot;find&quot; sidebar, showing a search bar with the term &quot;isUn&quot; and a list offive lines of code from the current file that contain that string, the second of which is highlighted as selected.\" width=\"720\" height=\"691\" class=\"aligncenter size-large wp-image-72599 width-fit\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image2-4.png?w=720&#038;resize=720%2C691 720w, https://github.blog/wp-content/uploads/2023/06/image2-4.png?w=300 300w\" sizes=\"(max-width: 720px) 100vw, 720px\" data-recalc-dims=\"1\"></p>\n<p>There is precedent for overriding this native browser feature to allow users to find text in virtualized code lines. <a href=\"https://microsoft.github.io/monaco-editor/\">Monaco, the text editor behind VS Code</a>, does exactly this to solve the same problem, as do many other online code editors, including <a href=\"https://replit.com/\">Repl.it</a> and <a href=\"https://codepen.io/\">CodePen</a>. Some other editors like <a href=\"https://try.ruby-lang.org/\">the official Ruby playground</a> ignore the problem altogether and accept that <kbd>Ctrl</kbd>+<kbd>F</kbd> will be partially broken within their virtualized editor.</p>\n<p>At the time, we felt confident leaning on this precedent. These examples are applications that run in a browser window, and as users, we expect applications to implement their own controls. Writing our own way to find text on the page was a step toward making GitHub’s Code View less of a web page and more of a web application.</p>\n<p>When we released the new code view experience as a private beta at GitHub Universe, we received clear feedback that our users think of GitHub as a page, not as an app. We tried to rework the experience to be as similar as possible to the native implementation, both in terms of user experience and performance. But ultimately, there are plenty of good reasons not to override this kind of native browser behavior.</p>\n<ul>\n<li>Users of assistive technologies often use <kbd>Ctrl</kbd>+<kbd>F</kbd> to locate elements on a page, so restricting the scope to the contents of the file broke these workflows.</li>\n<li>Users rely heavily on specific muscle memory for common actions, and we followed a deep rabbit hole to get the custom control to support all of the shortcuts used by various browsers.</li>\n<li>Finally, the native browser implementation is simply faster.</li>\n</ul>\n<p>Despite plenty of precedent for an overridden find experience, this user feedback drove us to dig deeper into how we could lean on the browser for something it already does well.</p>\n<p>Virtualization has an important role to play in our final product, but it is only one piece of the puzzle.</p>\n<h2 id=\"how-the-pieces-fit-together\">How the pieces fit together<a href=\"#how-the-pieces-fit-together\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"How the pieces fit together\"></a></h2>\n<p>Our complete solution for the code view features two pieces:</p>\n<ol>\n<li>A textarea that contains the entire text of the raw file. The contents are accessible, keyboard-navigable, copyable, and findable, yet invisible.</li>\n<li>A virtualized, syntax-highlighted overlay. The contents are visible, yet hidden from both mouse events and the browser&#8217;s find.</li>\n</ol>\n<p>Together, these pieces deliver a code view that supports the complete code reading experience with many new features. Despite the added complexity, this new experience is faster to render than the static HTML page that has displayed code on GitHub for more than a decade.</p>\n<h3 id=\"a-textarea-and-a-read-only-cursor\">A textarea and a read-only cursor<a href=\"#a-textarea-and-a-read-only-cursor\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"A textarea and a read-only cursor\"></a></h3>\n<p>The first half of this solution came to us from an unexpected angle.</p>\n<p>Beyond adding functionality to the code view, we wanted to improve the code reading experience for users of assistive technologies like screen readers. The previous code view was minimally accessible; a code document was displayed as a table, which created a very surprising experience for screen reader users. A code document is not a table, but likewise it is not a paragraph of text. To support a familiar interface for interacting with the code on the page, we added an invisible textarea underneath the virtualized, syntax-highlighted code lines so that users can move through the code with the keyboard in a familiar way. And for the browser, rendering a textarea is much simpler than using JavaScript to insert syntax-highlighted HTML. Browsers can render megabytes of text in a textarea with ease.</p>\n<p>Since this textarea contains the entire text of the raw file, it is not just an accessibility feature, but an opportunity to remove our custom implementation of <kbd>Ctrl</kbd>+<kbd>F</kbd> in favor of native browser implementations.</p>\n<h3 id=\"hiding-text-from-ctrlf\">Hiding text from <kbd>Ctrl</kbd>+<kbd>F</kbd><a href=\"#hiding-text-from-ctrlf\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Hiding text from &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F&lt;/kbd&gt;\"></a></h3>\n<p>With the addition of the textarea, we now have two copies of every line that is visible in the viewport: one in the textarea, and another in the virtualized, syntax-highlighted overlay. In this state, searching for text yields duplicated results, which is more confusing than a slow or unfamiliar experience.</p>\n<p>The question, then, is how to expose only one copy of the text to the browser&#8217;s native <kbd>Ctrl</kbd>+<kbd>F</kbd>. That brings us to the next key part of our solution: how we hid the syntax-highlighted overlay from find.</p>\n<p>For a code snippet like this line of Python:</p>\n<pre><code class=\"language-python\">print(\"Hello!\")\n</code></pre>\n<p>the old code view created a bit of HTML that looks like this:</p>\n<pre><code class=\"language-python\">&lt;span class=\"pl-en\"&gt;print&lt;/span&gt;(&lt;span class=\"pl-s\"&gt;\"Hello!\"&lt;/span&gt;)\n</code></pre>\n<p>But the text nodes containing <code>print</code>, <code>(</code>,<code>\"Hello!\"</code>, and <code>)</code> are all findable. It took two iterations to arrive at a format that looks identical but is consistently hidden from<kbd>Ctrl</kbd>+<kbd>F</kbd> on all major browsers. And as it turns out, this is not a question that is very easy to research!</p>\n<p>The first approach we tried relied on the fact that <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::before\">:before pseudoelements</a> are not part of the DOM, and therefore do not appear in find results. With a bit of a change to our HTML format that moves all text into a <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">data- attribute</a>, we can use CSS to inject the code text into the page without any findable text nodes.</p>\n<h4 id=\"html\">HTML<a href=\"#html\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"HTML\"></a></h4>\n<pre><code>&lt;span class=\"pl-en\" data-code-text=\"print\"&gt;&lt;/span&gt;\n&lt;span data-code-text=\"(\"&gt;&lt;/span&gt;\n&lt;span class=\"pl-s\" data-code-text=\"\"Hello!\"\"&gt;&lt;/span&gt;\n&lt;span data-code-text=\")\"&gt;&lt;/span&gt;\n</code></pre>\n<h4 id=\"css\">CSS<a href=\"#css\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"CSS\"></a></h4>\n<pre><code>[data-code-text]:before {\n   content: attr(data-code-text);\n}\n</code></pre>\n<p>But that&#8217;s not the end of the story, because the major browsers do not agree on whether text in :before pseudoelements should be findable; Firefox in particular has a powerful <kbd>Ctrl</kbd>+<kbd>F</kbd> implementation that is not fooled by our first trick.</p>\n<p>Our second attempt relied on a fact on which all browsers seem to agree: that text in adjacent pseudoelements is not treated as a contiguous block of text.<sup id=\"fnref-72597-4\"><a href=\"#fn-72597-4\" class=\"jetpack-footnote\" title=\"Read footnote.\">4</a></sup> So, even though Firefox would find <strong><code>print</code></strong> in the first example, it would not find <strong><code>print(</code></strong>. The solution, then, is to break up the text character-by-character:</p>\n<pre><code>&lt;span class=\"pl-en\"&gt;\n   &lt;span data-code-text=\"p\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"r\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"i\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"n\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"t\"&gt;&lt;/span&gt;\n&lt;/span&gt;\n&lt;span data-code-text=\"(\"&gt;&lt;/span&gt;\n&lt;span class=\"pl-s\"&gt;\n   &lt;span data-code-text=\"\"\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"H\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"e\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"l\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"l\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"o\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"!\"&gt;&lt;/span&gt;\n   &lt;span data-code-text=\"\"\"&gt;&lt;/span&gt;\n&lt;/span&gt;\n&lt;span data-code-text=\")\"&gt;&lt;/span&gt;\n</code></pre>\n<p>At first glance, this might seem to complicate the DOM so much that it might outweigh the performance gains for which we worked so hard. But since these lines are virtualized, we create this overlay for at most a few hundred lines at a time.</p>\n<h3 id=\"syntax-highlighting-in-a-compact-format\">Syntax highlighting in a compact format<a href=\"#syntax-highlighting-in-a-compact-format\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Syntax highlighting in a compact format\"></a></h3>\n<p>The path we took to build a faster code view with more features was, like the path one might follow when reading code in a new repository, highly non-linear. Performance optimizations led us to fix behaviors which were not quite right, and those behavior fixes led us to need further performance optimizations. Knowing how we wanted the HTML for the syntax-highlighted overlay to look, we had a few options for how to make it happen. After a number of experiments, we completed our puzzle with a performance optimization that ended this cycle without causing any behavior changes.</p>\n<p>Our syntax-highlighting service previously gave us a list of HTML strings, one for each line of code:</p>\n<pre><code>[\n   \"&lt;span class=\\\"pl-en\\\"&gt;print&lt;/span&gt;(&lt;span class=\\\"pl-s\\\"&gt;\"Hello!\"&lt;/span&gt;)\"\n]\n</code></pre>\n<p>In order to display code in a different format, we introduced a new format that simply gives the locations and css classes of highlighted segments:</p>\n<pre><code>[\n   [\n       {\"start\": 0, \"end\": 5, \"cssClass\": \"pl-en\"},\n       {\"start\": 6, \"end\": 14, \"cssClass\": \"pl-s\"}\n   ]\n]\n</code></pre>\n<p>From here, we can easily generate whatever HTML we want. And that brings us to our final optimization:</p>\n<p>within our syntax-highlighted overlay, we save React the trouble of managing the code lines by generating the HTML strings ourselves. This can deliver a surprisingly large performance boost in certain cases, like scrolling all the way through the 18,000-line CODEOWNERS file mentioned earlier. With React managing the entire DOM, we hit the “end” key to move all the way to the end of the file, and it takes the browser 870 milliseconds to finish handling the “keyup” event, followed by 3,700 milliseconds of JavaScript blocking the main thread. When we generate the code lines as HTML strings, handling the “keyup” event takes only 80 milliseconds, followed by about 700 milliseconds of blocking JavaScript.<sup id=\"fnref-72597-5\"><a href=\"#fn-72597-5\" class=\"jetpack-footnote\" title=\"Read footnote.\">5</a></sup></p>\n<h2 id=\"in-summary\">In summary<a href=\"#in-summary\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"In summary\"></a></h2>\n<p>GitHub’s mission is to be the home for all developers. Developers spend a substantial amount of their time reading code, and reading code is hard! We spent the past year building a new code view that supports the entire code reading experience because we are passionate about bringing great tools to the developers of the world to make their lives a bit easier.</p>\n<p>After a lot of difficult work, we have created a code view that introduces tons of new features for understanding code in context, and those features can be used by anyone. And we did it all while also making the page faster!</p>\n<p>We’re proud of what we built, and we would love for everyone to try it out and <a href=\"https://github.com/orgs/community/discussions/54546\">send us feedback</a>!</p>\n<p><!-- Footnotes themselves at the bottom. --></p>\n<h3 id=\"notes\">Notes<a href=\"#notes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Notes\"></a></h3>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-72597-1\">\nThis quote, popularized by and often attributed to Donald Knuth, was first said by Sir Tony Hoare, the developer of the quicksort algorithm.&#160;<a href=\"#fnref-72597-1\" title=\"Return to main content.\">&#8617;</a>\n</li>\n<li id=\"fn-72597-2\">\nAll performance metrics generated for this post use a development build of React in order to better compare apples to apples.&#160;<a href=\"#fnref-72597-2\" title=\"Return to main content.\">&#8617;</a>\n</li>\n<li id=\"fn-72597-3\">\n<a href=\"https://github.com/jbrown1618/virtualization-demo\">Check out the source code for this virtualization demo here!</a>&#160;<a href=\"#fnref-72597-3\" title=\"Return to main content.\">&#8617;</a>\n</li>\n<li id=\"fn-72597-4\">\nThe fact that browsers do not treat adjacent :before elements as part of the same block of text also introduces another complication: it resets the tab stop location for each node, which means that tabs are not rendered with the correct width! We need the syntax-highlighted overlay to align exactly with the text content underneath because any discrepancy creates a highly confusing user experience. Luckily, since the overlay is neither findable nor copyable, we can modify it however we like. The tab width problem is solved neatly by converting tabs to the appropriate number of spaces in the overlay.&#160;<a href=\"#fnref-72597-4\" title=\"Return to main content.\">&#8617;</a>\n</li>\n<li id=\"fn-72597-5\">\nAlthough <em>code</em> on GitHub is often nested deeply, the <em>syntax information</em> for a line of code can still be described linearly much of the time—we have a keyword followed by some plain text and then a string literal, etc. But sometimes it is not so simple—we might have a Markdown document with a code section. That code section might be an HTML document with a script tag. That script tag might contain JavaScript. That JavaScript might contain doc comments on a function. Those doc comments might contain @param tags which are rendered as keywords. We can handle this kind of arbitrarily nested syntax tree with a recursive React component. But that means the shape of our tree of React nodes, and therefore the amount of time it takes to perform DOM reconciliation, is determined by the code our users have chosen to write. On top of that, React adds DOM nodes one-at-a-time, and our overlay uses one DOM node per character of code. These are the main reasons that sidestepping React for this part of the page gives us such a dramatic performance boost.&#160;<a href=\"#fnref-72597-5\" title=\"Return to main content.\">&#8617;</a>\n</li>\n</ol>\n</div>\n",
    "Permalink": "https://github.blog/2023-06-21-crafting-a-better-faster-code-view/",
    "Links": [
      "https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/",
      "https://developer.chrome.com/en/docs/lighthouse/performance/interactive/",
      "https://learn.microsoft.com/en-us/dotnet/standard/events/observer-design-pattern",
      "https://microsoft.github.io/monaco-editor/",
      "https://replit.com/",
      "https://codepen.io/",
      "https://try.ruby-lang.org/",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/::before",
      "https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes",
      "https://github.com/orgs/community/discussions/54546",
      "https://github.com/jbrown1618/virtualization-demo"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/06/image2-4.png?w=720&resize=720%2C691"
    ]
  },
  {
    "Title": "How to use GitHub Copilot: Prompts, tips, and use cases",
    "Author": "Rizel Scarlett",
    "TextSummary": "In this prompt guide for GitHub Copilot, two GitHub developer advocates, Rizel and Michelle, will share examples and best practices for communicating your desired results to the AI pair programmer. ",
    "RawContent": "<details>\n<summary><strong>Leia este artigo em português</strong></summary>\n<p>As ferramentas de programação de IA generativa estão transformando a maneira como as pessoas desenvolvedoras abordam as tarefas diárias de programação. Desde a documentação de nossas bases de código até a geração de testes de unidade, essas ferramentas estão ajudando a acelerar nossos fluxos de trabalho. No entanto, assim como acontece com qualquer tecnologia emergente, sempre há uma curva de aprendizado. Como resultado, as pessoas desenvolvedoras — tanto iniciantes quanto experientes — às vezes se sentem frustradas quando os assistentes de programação baseados em IA não geram o resultado desejado. (Familiar com isso?)</p>\n<p>Por exemplo, ao pedir ao GitHub Copilot para desenhar uma casquinha de sorvete <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f366.png\" alt=\"\uD83C\uDF66\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\">usando p5.js, uma biblioteca JavaScript para código criativo, continuamos recebendo sugestões irrelevantes ou, às vezes, nenhuma sugestão. Mas quando aprendemos mais sobre a maneira como o GitHub Copilot processa as informações, percebemos que precisávamos ajustar a maneira como nos comunicamos com elas.</p>\n<p>Aqui está um exemplo do GitHub Copilot gerando uma solução irrelevante:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577016-2c22e7a6-6d99-47e2-8f45-1322ac2d2e1b.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" ice=\"\" cream=\"\" using=\"\" p5.js,\"=\"\" the=\"\" ai=\"\" pair=\"\" programmer=\"\" generated=\"\" an=\"\" image=\"\" that=\"\" looked=\"\" like=\"\" a=\"\" bulls-eye=\"\" target=\"\" sitting=\"\" on=\"\" top=\"\" of=\"\" a=\"\" stand.\"=\"\"></p>\n<p>Quando ajustamos nosso prompt, conseguimos gerar resultados mais precisos:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577026-e97a29d4-1378-48c1-a8ff-6adbc3bb2d8d.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" an=\"\" ice=\"\" cream=\"\" scoop=\"\" and=\"\" a=\"\" cherry=\"\" on=\"\" top,\"=\"\" and=\"\" specified=\"\" details=\"\" about=\"\" each=\"\" part=\"\" of=\"\" the=\"\" picture,=\"\" github=\"\" copilot=\"\" generated=\"\" a=\"\" picture=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" cone=\"\" that=\"\" we=\"\" wanted.=\"\" here=\"\" were=\"\" the=\"\" prompts=\"\" for=\"\" those=\"\" details:=\"\" 1)=\"\" \"the=\"\" ice=\"\" cream=\"\" cone=\"\" will=\"\" be=\"\" a=\"\" triangle=\"\" with=\"\" the=\"\" point=\"\" facing=\"\" down,=\"\" wider=\"\" point=\"\" at=\"\" the=\"\" top.=\"\" it=\"\" should=\"\" have=\"\" light=\"\" brown=\"\" fill\"=\"\" 2)=\"\" \"the=\"\" ice=\"\" cream=\"\" scoop=\"\" will=\"\" be=\"\" a=\"\" half=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" cone=\"\" with=\"\" a=\"\" light=\"\" pink=\"\" fill\"=\"\" 3)=\"\" \"the=\"\" cherry=\"\" will=\"\" be=\"\" a=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" scoop=\"\" with=\"\" a=\"\" red=\"\" fill\"=\"\" 4)=\"\" \"light=\"\" blue=\"\" background\"\"=\"\"></p>\n<p>Somos desenvolvedoras e entusiastas de IA. Eu, Rizel, usei o GitHub Copilot para criar uma extensão de navegador; jogo de pedra, papel e tesoura; e para enviar um Tweet. E eu, Michele, abri uma empresa de AI em 2021. Somos ambas Developer Advocates no GitHub e adoramos compartilhar nossas principais dicas para trabalhar com o GitHub Copilot.</p>\n<p>Neste guia do GitHub Copilot, abordaremos:</p>\n<ul>\n<li>O que exatamente é um prompt e o que é engenharia de prompt também (dica: depende se você está falando com uma pessoa desenvolvedora ou pesquisadora de machine learning)</li>\n<li>Três práticas recomendadas e três dicas adicionais para criação imediata com o GitHub Copilot</li>\n<li>Um exemplo em que você pode tentar solicitar ao GitHub Copilot para ajudá-lo a criar uma extensão de navegador</li>\n</ul>\n<h3 id=\"progresso-antes-de-perfeicao\">Progresso antes de perfeição<a href=\"#progresso-antes-de-perfeicao\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Progresso antes de perfeição\"></a></h3>\n<p>Mesmo com nossa experiência no uso de IA, reconhecemos que todes estão em uma fase de tentativa e erro com a tecnologia de IA generativa. Também conhecemos o desafio de fornecer dicas generalizadas de criação de prompts porque os modelos variam, assim como os problemas individuais nos quais as pessoas desenvolvedoras estão trabalhando. Este não é um guia definitivo. Em vez disso, estamos compartilhando o que aprendemos sobre criação de prompts para acelerar o aprendizado coletivo durante esta nova era de desenvolvimento de software.</p>\n<h2 id=\"o-que-e-um-prompt-e-o-que-e-engenharia-de-prompt\">O que é um prompt e o que é engenharia de prompt?<a href=\"#o-que-e-um-prompt-e-o-que-e-engenharia-de-prompt\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"O que é um prompt e o que é engenharia de prompt?\"></a></h2>\n<p>Depende de com quem você fala.</p>\n<p>No contexto das ferramentas de <strong>programação de IA generativa, um prompt pode significar coisas diferentes</strong>, dependendo se você está perguntando a pessoas pesquisadoras de Machine Learning (ML) que estão construindo e ajustando essas ferramentas ou pessoas desenvolvedoras que as estão usando em seus IDEs.</p>\n<p><strong>Para este guia, definiremos os termos do ponto de vista de uma pessoa desenvolvedora que está usando uma ferramenta de programação AI generativa no IDE</strong>. Mas, para dar a você uma visão completa, também adicionamos as definições do pesquisador de ML abaixo em nosso gráfico.</p>\n<div class=\"content-table-wrap\"><table>\n<tr>\n<th></th>\n<th><strong>Prompts</strong></th>\n<th><strong>Engenharia de Prompt</strong></th>\n<th><strong>Contexto</strong></th>\n</tr>\n<tr>\n<td>Pessoa Desenvolvedora</td>\n<td><strong>Blocos de código, linhas individuais de código ou comentários em linguagem natural</strong> que uma pessoa desenvolvedora escreve para gerar uma sugestão específica do GitHub Copilot.</td>\n<td><strong>Fornecer instruções ou comentários no IDE/strong> para gerar sugestões de código específicas.</strong></td>\n<td><strong>DDetalhes que são fornecidos por uma pessoa desenvolvedora</strong> para especificar a saída desejada de uma ferramenta de programação AI generativa.</td>\n</tr>\n<tr>\n<td>Pessoa Pesquisadora de ML</td>\n<td><strong>Compilação de código de IDE<br>\ne contexto</strong> relevante (comentários IDE, código em arquivos abertos, etc.) <strong>que são continuamente gerados por algoritmos</strong> e enviados para o modelo de uma ferramenta de programação AI generativa</td>\n<td><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">Criação de algoritmos que irão gerar prompts (compilações de código IDE e contexto) para um grande modelo de linguagem</a></td>\n<td><strong>Detalhes</strong> (<a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">como dados de seus arquivos abertos e código que você escreveu antes e depois do cursor</a>) <strong>que os algoritmos enviam</strong> para um modelo de linguagem grande (LLM) como informações adicionais sobre o código</td>\n</tr>\n</table></div>\n<h2 id=\"3-melhores-praticas-para-construcao-de-prompt-com-github-copilot\">3 melhores práticas para construção de prompt com GitHub Copilot<a href=\"#3-melhores-praticas-para-construcao-de-prompt-com-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3 melhores práticas para construção de prompt com GitHub Copilot\"></a></h2>\n<h3 id=\"1-defina-o-cenario-com-um-objetivo-de-alto-nivel-%f0%9f%96%bc%ef%b8%8f\">1. Defina o cenário com um objetivo de alto nível <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5bc.png\" alt=\"\uD83D\uDDBC\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#1-defina-o-cenario-com-um-objetivo-de-alto-nivel-%f0%9f%96%bc%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"1. Defina o cenário com um objetivo de alto nível &#x1f5bc;\"></a></h3>\n<p>Isso é mais útil se você tiver um arquivo em branco ou uma base de código vazia. Em outras palavras, se o GitHub Copilot não tiver contexto do que você deseja criar ou realizar, definir o cenário para a programação em par AI pode ser realmente útil. Isso ajuda a preparar o GitHub Copilot com uma descrição geral do que você deseja gerar &#8211; antes de entrar nos detalhes.</p>\n<p>Ao solicitar o GitHub Copilot, pense no processo como uma conversa com alguém: como devo detalhar o problema para que possamos resolvê-lo juntes? Como eu abordaria a programação em par com essa pessoa?</p>\n<p>Por exemplo, ao construir um editor de markdown em Next.jst, poderíamos escrever um comentário como este:</p>\n<pre><code>\n/*\nCrie um editor de markdown básico em Next.jcom as seguintes habilidades:\n- Use react hooks\n- Crie um estado para markdown com texto default \"digite markdown aqui\"\n- Uma área de texto onde pessoas usuárias podem escrever markdown a\n- Mostre uma demostração ao vivo do markdown enquando a pessoas digitaS\n- Suporte para sintaxe básica de markdown como cabeçalhos, negrito, itálico\n- Use React markdown npm package \n- O texto markdown e resultado em HTML devem ser salvos no estado do componente e atualizado em tempo real \n*/\n</code></pre>\n<p>Isso solicitará que o GitHub Copilot gere o código a seguir e produza um editor de markdown muito simples, sem estilo, mas funcional, em menos de 30 segundos. Podemos usar o tempo restante para estilizar o componente:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577032-c1ee10ef-3c24-458d-94af-8408484a1ee0.gif\" alt=\"We used this prompt to build a markdown editor in Next.jst using GitHub Copilot:\n- Use react hooks\n- Create state for markdown with default text \" type=\"\" markdown=\"\" here\"=\"\" -=\"\" a=\"\" text=\"\" area=\"\" where=\"\" users=\"\" can=\"\" write=\"\" markdown=\"\" -=\"\" show=\"\" a=\"\" live=\"\" preview=\"\" of=\"\" the=\"\" markdown=\"\" text=\"\" as=\"\" i=\"\" type=\"\" -=\"\" support=\"\" for=\"\" basic=\"\" markdown=\"\" syntax=\"\" like=\"\" headers,=\"\" bold,=\"\" italics=\"\" -=\"\" use=\"\" react=\"\" markdown=\"\" npm=\"\" package=\"\" -=\"\" the=\"\" markdown=\"\" text=\"\" and=\"\" resulting=\"\" html=\"\" should=\"\" be=\"\" saved=\"\" in=\"\" the=\"\" component's=\"\" state=\"\" and=\"\" updated=\"\" in=\"\" real=\"\" time\"=\"\"></p>\n<p>Observação: esse nível de detalhe ajuda a criar um resultado mais desejado, mas os resultados ainda podem ser não determinísticos. Por exemplo, no comentário, solicitamos ao GitHub Copilot que criasse um texto padrão que diz “digite markdown aqui”, mas, em vez disso, gerou “visualização de markdown” como as palavras padrão.</p>\n<h3 id=\"2-faca-sua-pergunta-simples-e-especifica-procure-receber-uma-saida-curta-do-github-copilot-%f0%9f%97%a8%ef%b8%8f\">2. Faça sua pergunta simples e específica. Procure receber uma saída curta do GitHub Copilot.<img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5e8.png\" alt=\"\uD83D\uDDE8\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#2-faca-sua-pergunta-simples-e-especifica-procure-receber-uma-saida-curta-do-github-copilot-%f0%9f%97%a8%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"2. Faça sua pergunta simples e específica. Procure receber uma saída curta do GitHub Copilot.&#x1f5e8;\"></a></h3>\n<p>Depois de comunicar seu objetivo principal ao Copilot, <strong>articule a lógica e as etapas que ele precisa seguir para atingir esse objetivo</strong>. O GitHub Copilot entende melhor seu objetivo quando você detalha as coisas. (Imagine que você está escrevendo uma receita. Você dividiria o processo de cozimento em etapas discretas &#8211; não escreveria um parágrafo descrevendo o prato que deseja fazer.)</p>\n<p><strong>Deixe o GitHub Copilot gerar o código após cada etapa</strong>, em vez de pedir que ele gere vários códigos de uma só vez.</p>\n<p>Aqui está um exemplo de nós fornecendo ao GitHub Copilot instruções passo a passo para reverter uma função:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245886121-885cc0ed-97c2-4b25-be74-02e7b34711a7.gif\" alt=\"We prompted GitHub Copilot to reverse a sentence by writing six prompts one at a time. This allowed GitHub Copilot to generate a suggestion for one prompt before moving onto the text. It also gave us the chance to tweak the suggested code before moving onto the next step. The six prompts we used were: First, let's make the first letter of the sentence lower case if it's not an 'I.' Next, let's split the sentence into an array of words. Then, let's take out the punctuation marks from the sentence. Now, let's remove the punctuation marks from the sentence. Let's reverse the sentence and join it back together. Finally, let's make the first letter of the sentence capital and add the punctuation marks.\"></p>\n<h3 id=\"3-de-alguns-exemplos-para-o-github-copilot-%e2%9c%8d%ef%b8%8f\">3. De alguns exemplos para o  GitHub Copilot. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/270d.png\" alt=\"✍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#3-de-alguns-exemplos-para-o-github-copilot-%e2%9c%8d%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3. De alguns exemplos para o  GitHub Copilot. &#x270d;\"></a></h3>\n<p>Aprender com exemplos não é útil apenas para humanos, mas também para seu programador Copilot. Por exemplo, queríamos extrair os nomes do array de dados abaixo e armazená-los em um novo array:</p>\n<pre><code>\nconst data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n</code></pre>\n<p>Quando você não mostra um exemplo para o GitHub Copilot …</p>\n<pre><code>\n// Map por um array de arrays de objetos para transformar dados\nconst data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n</code></pre>\n<p>Isso gerou um uso incorreto do map:</p>\n<pre><code>\nconst mappedData = data.map(x => [x.name](http://x.name/));\n\nconsole.log(mappedData);\n\n// Results: [undefined, undefined]\n</code></pre>\n<p>Em contraste, quando mostramos um exemplo …</p>\n<pre><code>\n// Map por um array de arrays de objetos\n// Exemplo: Extraia nomes  array data\n// Resultado desejado: ['John', 'Jane', 'Bob']\nconst data = [\n  [{ name: 'John', age: 25 }, { name: 'Jane', age: 30 }],\n  [{ name: 'Bob', age: 40 }]\n];\n</code></pre>\n<p>Recebemos o resultado desejado.</p>\n<pre><code>\nconst mappedData = data.flatMap(sublist => sublist.map(person => person.name));\n\nconsole.log(mappedData);\n// Results: ['John', 'Jane', 'Bob']\n</code></pre>\n<p>Leia mais sobre abordagens comuns para treinamento de IA, <a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp/#1424065\">como aprendizado de disparo zero, disparo único e poucos disparos</a>.</p>\n<h2 id=\"tres-dicas-adicionais-para-criacao-imediata-com-o-github-copilot\">Três dicas adicionais para criação imediata com o GitHub Copilot<a href=\"#tres-dicas-adicionais-para-criacao-imediata-com-o-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Três dicas adicionais para criação imediata com o GitHub Copilot\"></a></h2>\n<p>Aqui estão três dicas adicionais para ajudar a orientar sua conversa com o GitHub Copilot.</p>\n<h3 id=\"1-experimente-com-seus-prompts\">1. Experimente com seus prompts.<a href=\"#1-experimente-com-seus-prompts\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"1. Experimente com seus prompts.\"></a></h3>\n<p>Assim como a conversa é mais uma arte do que uma ciência, o mesmo acontece com a criação imediata. Portanto, se você não receber o que deseja na primeira tentativa, reformule seu prompt seguindo as práticas recomendadas acima.</p>\n<p>Por exemplo, o prompt abaixo é vago. Ele não fornece nenhum contexto ou limites para o GitHub Copilot gerar sugestões relevantes.</p>\n<pre><code>\n# Escreva algum código para grades.py\n</code></pre>\n<p>Repetimos o prompt para sermos mais específicos, mas ainda não obtivemos o resultado exato que procurávamos. Este é um bom lembrete de que adicionar especificidade ao seu prompt é mais difícil do que parece. É difícil saber, desde o início, quais detalhes você deve incluir sobre seu objetivo para gerar as sugestões mais úteis do GitHub Copilot. É por isso que encorajamos a experimentação.<br>\nA versão do prompt abaixo é mais específica que a anterior, mas não define claramente os requisitos de entrada e saída.</p>\n<pre><code>\n# Implemente uma função em grades.py para calcular a nota média\n</code></pre>\n<p>Experimentamos o prompt mais uma vez definindo limites e delineando o que queríamos que a função fizesse. Também reformulamos o comentário para que a função fosse mais clara (dando ao GitHub Copilot uma intenção clara de verificação).</p>\n<p>Desta vez, obtivemos os resultados que procurávamos.</p>\n<pre><code>\n# Implemente a função calculate_average_grade em grades.py que recebe uma lista de notas como entrada e retorna a nota média como um número de ponto flutuante\n</code></pre>\n<h3 id=\"2-mantenha-algumas-abas-abertas\">2. Mantenha algumas abas abertas.<a href=\"#2-mantenha-algumas-abas-abertas\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"2. Mantenha algumas abas abertas.\"></a></h3>\n<p>Não temos um número exato de abas que você deve manter abertas para ajudar o GitHub Copilot a contextualizar seu código, mas, com base em nossa experiência, descobrimos que uma ou duas são úteis.</p>\n<p>O GitHub Copilot usa <a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">uma técnica chamada de abas vizinhas</a> que permite que a ferramenta programadora em par AI contextualize seu código processando todos os arquivos abertos em seu IDE em vez de apenas um único arquivo em que você está trabalhando. No entanto, não é garantido que o GitHub Copilot considere todos os arquivos abertos como contexto necessário para o seu código.</p>\n<h3 id=\"3-use-boas-praticas-de-programacao\">3. Use boas práticas de programação.<a href=\"#3-use-boas-praticas-de-programacao\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3. Use boas práticas de programação.\"></a></h3>\n<p>Isso inclui fornecer nomes e funções de variáveis ​​descritivas e seguir estilos e padrões de codificação consistentes. Descobrimos que trabalhar com o GitHub Copilot nos encoraja a seguir boas práticas de programação que aprendemos ao longo de nossas carreiras.</p>\n<p>Por exemplo, aqui usamos um nome de função descritivo e seguimos os padrões da base de código para alavancar casos de cobra.</p>\n<pre><code>\ndef authenticate_user(username, password):\n</code></pre>\n<p>Como resultado, GitHub Copilot gera uma sugestão de código relevante:</p>\n<pre><code>\ndef authenticate_user(username, password):\n    # Code for authenticating the user\n    if is_valid_user(username, password):\n        generate_session_token(username)\n        return True\n    else:\n        return False\n</code></pre>\n<p>Compare isso com o exemplo abaixo, onde introduzimos um estilo de programação inconsistente e nomeamos mal nossa função.</p>\n<pre><code>\ndef rndpwd(l):\n</code></pre>\n<p>Em vez de sugerir código, o GitHub Copilot gerou um comentário que dizia: “O código vai aqui”.</p>\n<pre><code>\ndef rndpwd(l):\n    # Code goes here\n</code></pre>\n<h3 id=\"fique-esperto\">Fique esperto<a href=\"#fique-esperto\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Fique esperto\"></a></h3>\n<p>Os LLMs por trás das ferramentas de programação de IA generativas são projetados para encontrar e extrapolar padrões de seus dados de treinamento, aplicar esses padrões à linguagem existente e, em seguida, produzir código que siga esses padrões. Dada a escala desses modelos, eles podem gerar uma sequência de código que ainda nem existe. Assim como você revisaria o código de um colega, você deve sempre avaliar, analisar e validar o código gerado por IA.</p>\n<h2 id=\"um-exemplo-de-pratica-%f0%9f%91%a9%f0%9f%8f%bd%f0%9f%92%bb\">Um exemplo de prática <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f469-1f3fd-200d-1f4bb.png\" alt=\"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBB\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#um-exemplo-de-pratica-%f0%9f%91%a9%f0%9f%8f%bd%f0%9f%92%bb\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Um exemplo de prática &#x1f469;&#x1f3fd;&#x200d;&#x1f4bb;\"></a></h2>\n<p><a href=\"https://github.blog/2023-05-12-how-i-used-github-copilot-to-build-a-browser-extension/\">Tente solicitar ao GitHub Copilot para criar uma extensão de navegador</a>.</p>\n<p>Para começar, <a href=\"https://docs.github.com/pt/copilot/getting-started-with-github-copilot\">você precisará ter o GitHub Copilot instalado e aberto em seu IDE</a>. Também temos acesso a uma <a href=\"https://github.com/features/preview/copilot-x\">prévia do bate-papo do GitHub Copilot</a>, que é o que usamos quando tiver dúvidas sobre o nosso código. Se você não tem bate-papo no GitHub Copilot, <a href=\"https://github.com/github-copilot/chat_waitlist_signup/join\">inscreva-se na lista de espera</a>. Até então, você pode emparelhar o <a href=\"https://github.com/features/copilot\">GitHub Copilot com o ChatGPT</a>.</p>\n<h3 id=\"guias-de-criacao-de-ia-mais-generativos-em-ingles\">Guias de criação de IA mais generativos (em inglês)<a href=\"#guias-de-criacao-de-ia-mais-generativos-em-ingles\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Guias de criação de IA mais generativos (em inglês)\"></a></h3>\n<p><0l></p>\n<li><a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp\">Um guia para iniciantes sobre engenharia de prompt com o GitHub Copilot</a></li>\n<li><a href=\"https://dev.to/mishmanners/prompt-engineering-for-ai-l02-temp-slug-5273047?preview=551f0e25cb04a20f52bbf20dc42b6048806734e33f1c2c9f35372a5b8eab93eb2c52a82c2bd958b4dfabba5d52e7bd8b320ed66ae8e5275e7f006d55\">Engenharia de alerta para IA</a></li>\n<li><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/\">Como o GitHub Copilot está melhorando a compreensão do seu código</a></li>\n\n<hr>\n</details>\n<details>\n<summary><strong>Lee este articulo en español</strong></summary>\n<p>Las herramientas de codificación con IA generativa están transformando la forma en que los desarrolladores abordan las tareas de codificación diarias. Desde documentar nuestras bases de código hasta generar pruebas unitarias, estas herramientas están ayudando a acelerar nuestros flujos de trabajo. Sin embargo, como con cualquier tecnología emergente, siempre hay una curva de aprendizaje. Como resultado, los desarrolladores, tanto principiantes como experimentados, a veces se sienten frustrados cuando los asistentes de codificación impulsados por IA no generan el resultado que quieren. (¿Te suena familiar?)</p>\n<p>Por ejemplo, al pedirle a GitHub Copilot que dibuje un cono de helado <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f366.png\" alt=\"\uD83C\uDF66\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> usando p5.js, una biblioteca de JavaScript para codificación creativa, seguimos recibiendo sugerencias irrelevantes, o a veces ninguna sugerencia en absoluto. Pero cuando aprendimos más sobre la forma en que GitHub Copilot procesa la información, nos dimos cuenta de que teníamos que ajustar la forma en que nos comunicábamos.</p>\n<p>Aquí hay un ejemplo de GitHub Copilot generando una solución irrelevante:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577016-2c22e7a6-6d99-47e2-8f45-1322ac2d2e1b.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" ice=\"\" cream=\"\" using=\"\" p5.js,\"=\"\" the=\"\" ai=\"\" pair=\"\" programmer=\"\" generated=\"\" an=\"\" image=\"\" that=\"\" looked=\"\" like=\"\" a=\"\" bulls-eye=\"\" target=\"\" sitting=\"\" on=\"\" top=\"\" of=\"\" a=\"\" stand.\"=\"\"></p>\n<p>Cuando ajustamos nuestra instrucción, pudimos generar resultados más precisos:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577026-e97a29d4-1378-48c1-a8ff-6adbc3bb2d8d.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" an=\"\" ice=\"\" cream=\"\" scoop=\"\" and=\"\" a=\"\" cherry=\"\" on=\"\" top,\"=\"\" and=\"\" specified=\"\" details=\"\" about=\"\" each=\"\" part=\"\" of=\"\" the=\"\" picture,=\"\" github=\"\" copilot=\"\" generated=\"\" a=\"\" picture=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" cone=\"\" that=\"\" we=\"\" wanted.=\"\" here=\"\" were=\"\" the=\"\" prompts=\"\" for=\"\" those=\"\" details:=\"\" 1)=\"\" \"the=\"\" ice=\"\" cream=\"\" cone=\"\" will=\"\" be=\"\" a=\"\" triangle=\"\" with=\"\" the=\"\" point=\"\" facing=\"\" down,=\"\" wider=\"\" point=\"\" at=\"\" the=\"\" top.=\"\" it=\"\" should=\"\" have=\"\" light=\"\" brown=\"\" fill\"=\"\" 2)=\"\" \"the=\"\" ice=\"\" cream=\"\" scoop=\"\" will=\"\" be=\"\" a=\"\" half=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" cone=\"\" with=\"\" a=\"\" light=\"\" pink=\"\" fill\"=\"\" 3)=\"\" \"the=\"\" cherry=\"\" will=\"\" be=\"\" a=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" scoop=\"\" with=\"\" a=\"\" red=\"\" fill\"=\"\" 4)=\"\" \"light=\"\" blue=\"\" background\"\"=\"\"></p>\n<p>Somos tanto desarrolladoras como entusiastas de la IA. Yo, Rizel, he utilizado GitHub Copilot para construir una extensión de navegador; un juego de piedra, papel o tijera; y para enviar un tweet. Y yo, Michelle, lancé una compañía de IA en 2016. Ambas somos DevRel en GitHub y nos encanta compartir nuestros mejores consejos para trabajar con GitHub Copilot.</p>\n<p>En esta guía para GitHub Copilot, cubriremos:</p>\n<ul>\n<li>Qué es exactamente un “prompt” y qué es la ingeniería de prompts (pista: depende de si estás hablando con un desarrollador o con un investigador de aprendizaje automático)</li>\n<li>Tres mejores prácticas y tres consejos adicionales para la creación de prompts con GitHub Copilot</li>\n<li>Un ejemplo donde puedes probar a GitHub Copilot para que te ayude en la construcción de una extensión de navegador</li>\n</ul>\n<h3 id=\"progreso-sobre-perfeccion\"> Progreso sobre perfección <a href=\"#progreso-sobre-perfeccion\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" Progreso sobre perfección \"></a></h3>\n<p>Incluso con nuestra experiencia usando IA, reconocemos que todos están en una fase de prueba y error con la tecnología de IA generativa. También conocemos el desafío de proporcionar consejos generales de elaboración de prompts porque los modelos varían, al igual que los problemas individuales en los que los desarrolladores están trabajando. Esta no es una guía definitiva. En su lugar, estamos compartiendo lo que hemos aprendido sobre la elaboración de prompts para acelerar el aprendizaje colectivo durante esta nueva era del desarrollo de software.</p>\n<h2 id=\"que-es-un-prompt-y-que-es-la-ingenieria-de-prompt\"> ¿Qué es un “prompt” y qué es la ingeniería de prompt? <a href=\"#que-es-un-prompt-y-que-es-la-ingenieria-de-prompt\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" ¿Qué es un “prompt” y qué es la ingeniería de prompt? \"></a></h2>\n<p>Depende de con quién hables.</p>\n<p>En el contexto de las herramientas de codificación de IA generativa, un prompt puede significar diferentes cosas, dependiendo de si está preguntando a los investigadores de aprendizaje automático (ML) que están construyendo y ajustando estas herramientas, o a los desarrolladores que las están usando en sus IDE.</p>\n<p>Para esta guía, definiremos los términos desde el punto de vista de un desarrollador que utiliza una herramienta de codificación de IA generativa en el IDE. Pero para brindarle una imagen completa, también agregamos las definiciones de investigador de ML a continuación.</p>\n<div class=\"content-table-wrap\"><table>\n<tr>\n<th></th>\n<th><strong>Prompts</strong></th>\n<th><strong>Ingenieria de Prompt</strong></th>\n<th><strong>Contexto</strong></th>\n</tr>\n<tr>\n<td>Desarrollador</td>\n<td><strong>Bloques de código, líneas individuales de código, o comentarios en lenguaje natural</strong> que un desarrollador escribe para generar una sugerencia específica de GitHub Copilot.</td>\n<td><strong>Proporcionar instrucciones o comentarios en el IDE</strong> para generar sugerencias de código específicas </td>\n<td><strong>Detalles que proporciona un desarrollador</strong> para especificar la prompt deseada de una herramienta de codificación generativa de IA</td>\n</tr>\n<tr>\n<td>Investigador de ML</td>\n<td><strong>Compilación de código de IDE y contexto</strong> relevante (comentarios de IDE, código en archivos abiertos, etc.) <strong>que se genera continuamente por algoritmos</strong> y se envíaal modelo de una herramienta de codificación generativa de IA</td>\n<td><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">Creación de algoritmos que generarán prompts (compilaciones de código de IDE y contexto) para un modelo de lenguaje de gran tamaño</a></td>\n<td><strong>Detalles</strong> (<a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">como datos de tus archivos abiertos y código que has escrito antes y después del curso</a>) <strong>que los algoritmos envían</strong> a un modelo de lenguaje de gran tamaño (LLM) como información adicional sobre el código</td>\n</tr>\n</table></div>\n<h2 id=\"3-mejores-practicas-para-la-elaboracion-de-prompts-con-github-copilot\"> 3 mejores prácticas para la elaboración de prompts con GitHub Copilot <a href=\"#3-mejores-practicas-para-la-elaboracion-de-prompts-con-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 3 mejores prácticas para la elaboración de prompts con GitHub Copilot \"></a></h2>\n<h3 id=\"1-establecer-el-escenario-con-un-objetivo-de-alto-nivel-%f0%9f%96%bc%ef%b8%8f\"> 1. Establecer el escenario con un objetivo de alto nivel. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5bc.png\" alt=\"\uD83D\uDDBC\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> <a href=\"#1-establecer-el-escenario-con-un-objetivo-de-alto-nivel-%f0%9f%96%bc%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 1. Establecer el escenario con un objetivo de alto nivel. &#x1f5bc; \"></a></h3>\n<p>Esto es más útil si tienes un archivo en blanco o una base de código vacía. En otras palabras, si GitHub Copilot no tiene ningún contexto de lo que quieres construir o lograr, establecer el escenario para el programador par de IA puede ser realmente útil. Ayuda a preparar a GitHub Copilot con una descripción general de lo que quieres que genere, antes de que te sumerjas en los detalles.</p>\n<p>Al hacer prompts, GitHub Copilot, piensa en el proceso como si estuvieras teniendo una conversación con alguien: ¿Cómo debería desglosar el problema para que podamos resolverlo juntos? ¿Cómo abordaría la programación en pareja con esta persona?</p>\n<p>Por ejemplo, al construir un editor de markdown en Next.js, podríamos escribir un comentario como este:</p>\n<pre><code>\n//\nCrea un editor de markdown básico en Next.js con las siguientes características:\n- Utiliza hooks de React\n- Crea un estado para markdown con texto predeterminado \"escribe markdown aquí\"\n- Un área de texto donde los usuarios pueden escribir markdown\n- Muestra una vista previa en vivo del texto de markdown mientras escribo\n- Soporte para la sintaxis básica de markdown como encabezados, negrita, cursiva\n- Utiliza el paquete npm de React markdown\n- El texto de markdown y el HTML resultante deben guardarse en el estado del componente y actualizarse en tiempo real \n*/\n</code></pre>\n<p>Esto hará que GitHub Copilot genere el siguiente código y produzca un muy editor de rebajas simple, sin estilo pero funcional en menos de 30 segundos. Podemos usar el tiempo restante para diseñar el componente:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577032-c1ee10ef-3c24-458d-94af-8408484a1ee0.gif\" alt=\"We used this prompt to build a markdown editor in Next.jst using GitHub Copilot:\n- Use react hooks\n- Create state for markdown with default text \" type=\"\" markdown=\"\" here\"=\"\" -=\"\" a=\"\" text=\"\" area=\"\" where=\"\" users=\"\" can=\"\" write=\"\" markdown=\"\" -=\"\" show=\"\" a=\"\" live=\"\" preview=\"\" of=\"\" the=\"\" markdown=\"\" text=\"\" as=\"\" i=\"\" type=\"\" -=\"\" support=\"\" for=\"\" basic=\"\" markdown=\"\" syntax=\"\" like=\"\" headers,=\"\" bold,=\"\" italics=\"\" -=\"\" use=\"\" react=\"\" markdown=\"\" npm=\"\" package=\"\" -=\"\" the=\"\" markdown=\"\" text=\"\" and=\"\" resulting=\"\" html=\"\" should=\"\" be=\"\" saved=\"\" in=\"\" the=\"\" component's=\"\" state=\"\" and=\"\" updated=\"\" in=\"\" real=\"\" time\"=\"\"></p>\n<p>Nota: Este nivel de detalle te ayuda a crear una prompt más deseada, pero los resultados aún pueden ser no deterministas. Por ejemplo, en el comentario, solicitamos a GitHub Copilot que cree un texto predeterminado que diga &#8220;escribe markdown aquí&#8221;, pero en cambio generó &#8220;vista previa de markdown&#8221; como las palabras predeterminadas.</p>\n<h3 id=\"2-haz-tu-solicitud-simple-y-especifica-apunta-a-recibir-una-prompt-corta-de-github-copilot-%f0%9f%97%a8%ef%b8%8f\"> 2. Haz tu solicitud simple y específica. Apunta a recibir una prompt corta de GitHub Copilot. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5e8.png\" alt=\"\uD83D\uDDE8\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> <a href=\"#2-haz-tu-solicitud-simple-y-especifica-apunta-a-recibir-una-prompt-corta-de-github-copilot-%f0%9f%97%a8%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 2. Haz tu solicitud simple y específica. Apunta a recibir una prompt corta de GitHub Copilot. &#x1f5e8; \"></a></h3>\n<p>Una vez que comunicas tu objetivo principal al programador par AI, articula la lógica y los pasos que debe seguir para alcanzar ese objetivo. GitHub Copilot comprende mejor tu objetivo cuando desglosas las cosas. (Imagina que estás escribiendo una receta. Desglosarías el proceso de cocción en pasos discretos, no escribirías un párrafo describiendo el plato que quieres hacer.)<br>\nDeja que GitHub Copilot genere el código después de cada paso, en lugar de pedirle que genere un montón de código de una sola vez.<br>\nAquí tienes un ejemplo de cómo proporcionamos a GitHub Copilot instrucciones paso a paso para invertir una función:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245886121-885cc0ed-97c2-4b25-be74-02e7b34711a7.gif\" alt=\"We prompted GitHub Copilot to reverse a sentence by writing six prompts one at a time. This allowed GitHub Copilot to generate a suggestion for one prompt before moving onto the text. It also gave us the chance to tweak the suggested code before moving onto the next step. The six prompts we used were: First, let's make the first letter of the sentence lower case if it's not an 'I.' Next, let's split the sentence into an array of words. Then, let's take out the punctuation marks from the sentence. Now, let's remove the punctuation marks from the sentence. Let's reverse the sentence and join it back together. Finally, let's make the first letter of the sentence capital and add the punctuation marks.\"></p>\n<h3 id=\"3-proporciona-a-github-copilot-uno-o-dos-ejemplos-%e2%9c%8d%ef%b8%8f\"> 3. Proporciona a GitHub Copilot uno o dos ejemplos. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/270d.png\" alt=\"✍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> <a href=\"#3-proporciona-a-github-copilot-uno-o-dos-ejemplos-%e2%9c%8d%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 3. Proporciona a GitHub Copilot uno o dos ejemplos. &#x270d; \"></a></h3>\n<p>Aprender de ejemplos no solo es útil para los humanos, sino también para tu programador par AI. Por ejemplo, queríamos extraer los nombres del siguiente arreglo de datos y almacenarlos en un nuevo arreglo:</p>\n<pre><code>\nconst data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n</code></pre>\n<p>Cuando no le mostramos un ejemplo a GitHub Copilot &#8230;</p>\n<pre><code>\n// Mapee a través de una matriz de matrices de objetos para transformar datos\nconst data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n</code></pre>\n<p>Generó un uso incorrecto del mapa:</p>\n<pre><code>\nconst mappedData = data.map(x => [x.name](http://x.name/));\n\nconsole.log(mappedData);\n\n// Results: [undefined, undefined]\n</code></pre>\n<p>Por el contrario, cuando proporcionamos un ejemplo&#8230;</p>\n<pre><code>\n// Recorrer un array de arrays de objetos\n// Ejemplo: Extraer los nombres del array de datos\n// Resultado deseado: ['John', 'Jane', 'Bob']\nconst data = [\n  [{ name: 'John', age: 25 }, { name: 'Jane', age: 30 }],\n  [{ name: 'Bob', age: 40 }]\n];\n</code></pre>\n<p>Recibimos nuestro resultado deseado.</p>\n<pre><code>\nconst mappedData = data.flatMap(sublist => sublist.map(person => person.name));\n\nconsole.log(mappedData);\n// Results: ['John', 'Jane', 'Bob'] \n</code></pre>\n<p>Lee más acerca de los enfoques comunes para el entrenamiento de IA, como el aprendizaje de <a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp/#1424065\">zero-shot, one-shot, and few-shot learning</a>.</p>\n<h2 id=\"tres-consejos-adicionales-para-la-elaboracion-de-prompts-con-github-copilot\"> Tres consejos adicionales para la elaboración de prompts con GitHub Copilot<a href=\"#tres-consejos-adicionales-para-la-elaboracion-de-prompts-con-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" Tres consejos adicionales para la elaboración de prompts con GitHub Copilot\"></a></h2>\n<p>Aquí tienes tres consejos adicionales para ayudarte a guiar tu conversación con GitHub Copilot.</p>\n<h3 id=\"1-experimenta-con-tus-prompts\"> 1. Experimenta con tus prompts.<a href=\"#1-experimenta-con-tus-prompts\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 1. Experimenta con tus prompts.\"></a></h3>\n<p>Al igual que la conversación es más un arte que una ciencia, también lo es la elaboración de prompts. Así que, si no recibes lo que quieres en el primer intento, reformula tu prompts siguiendo las mejores prácticas mencionadas anteriormente.</p>\n<p>Por ejemplo, la prompts de abajo es vaga. No proporciona ningún contexto ni límites para que GitHub Copilot genere sugerencias relevantes.</p>\n<pre><code>\n# Escribe algo de código para grades.py\n</code></pre>\n<p>Iteramos en el prompt para ser más específicos, pero aún no obtuvimos el resultado exacto que estábamos buscando. Este es un buen recordatorio de que añadir especificidad a tu prompt es más difícil de lo que parece. Es difícil saber, desde el principio, qué detalles debes incluir sobre tu objetivo para generar las sugerencias más útiles de GitHub Copilot. Por eso animamos a la experimentación.</p>\n<p>La versión del promopt de abajo es más específica que la de arriba, pero no define claramente los requisitos de entrada y salida.</p>\n<pre><code>\n# Implementar una función en grades.py para calcular la nota media\n</code></pre>\n<p>Experimentamos una vez más con el promopt estableciendo límites y delineando lo que queríamos que hiciera la función. También reformulamos el comentario para que la función fuera más clara (dándole a GitHub Copilot una intención clara contra la que verificar).</p>\n<p>Esta vez, obtuvimos los resultados que estábamos buscando.</p>\n<pre><code>\n# Implementa la función calculate_average_grade en grades.py que toma una lista de calificaciones como entrada y devuelve la calificación media como un número flotante.\n</code></pre>\n<h3 id=\"2-manten-un-par-de-pestanas-relevantes-abiertas\"> 2. Mantén un par de pestañas relevantes abiertas.<a href=\"#2-manten-un-par-de-pestanas-relevantes-abiertas\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 2. Mantén un par de pestañas relevantes abiertas.\"></a></h3>\n<p>No tenemos un número exacto de pestañas que debas mantener abiertas para ayudar a GitHub Copilot a contextualizar tu código, pero en nuestra experiencia, hemos encontrado que una o dos es útil.</p>\n<p><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">GitHub Copilot utiliza una técnica llamada pestañas vecinas que</a> permite al programador de pares de IA contextualizar su código procesando todos los archivos abiertos en su IDE en lugar de solo el archivo en el que está trabajando. Sin embargo, no se garantiza que GItHub Copilot considere todos los archivos abiertos como contexto necesario para su código.</p>\n<h3 id=\"3-utilice-buenas-practicas-de-codificacion\"> 3. Utilice buenas prácticas de codificación.<a href=\"#3-utilice-buenas-practicas-de-codificacion\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" 3. Utilice buenas prácticas de codificación.\"></a></h3>\n<p>Eso incluye proporcionar nombres y funciones de variables descriptivas, y seguir estilos y patrones de codificación consistentes. Hemos descubierto que trabajar con GitHub Copilot nos anima a seguir las buenas prácticas de codificación que hemos aprendido a lo largo de nuestras carreras.</p>\n<p>Por ejemplo, aquí usamos un nombre de función descriptiva y seguimos los patrones de la base de código para aprovechar el caso de la serpiente.</p>\n<pre><code>\ndef authenticate_user(nombre de usuario, contraseña):\n</code></pre>\n<p>Como resultado, GitHub Copilot generó una sugerencia de código relevante:</p>\n<pre><code>\ndef authenticate_user(nombre de usuario, contraseña):\n    # Código para autenticar al usuario\n    Si is_valid_user(nombre de usuario, contraseña):\n        generate_session_token(nombre de usuario)\n        return True\n    más:\n        return Falso\n</code></pre>\n<p>Compare esto con el siguiente ejemplo, donde introdujimos un estilo de codificación inconsistente y mal nombramos nuestra función.</p>\n<pre><code>\ndef rndpwd(l):\n</code></pre>\n<p>En lugar de sugerir código, GitHub Copilot generó un comentario que decía: &#8220;El código va aquí&#8221;.</p>\n<pre><code>\ndef rndpwd(l):\n    # El código va aquí\n</code></pre>\n<h3 id=\"mantente-inteligente\">Mantente inteligente<a href=\"#mantente-inteligente\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Mantente inteligente\"></a></h3>\n<p>Los LLM detrás de las herramientas generativas de codificación de IA están diseñados para encontrar y extrapolar patrones de sus datos de entrenamiento, aplicar esos patrones al lenguaje existente y luego producir código que siga esos patrones. Dada la gran escala de estos modelos, podrían generar una secuencia de código que ni siquiera existe todavía. Al igual que revisaría el código de un colega, siempre debe evaluar, analizar y validar el código generado por IA.</p>\n<h2 id=\"un-ejemplo-%f0%9f%91%a9%f0%9f%8f%bd-%f0%9f%92%bb-de-practica\"> Un ejemplo <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f469-1f3fd.png\" alt=\"\uD83D\uDC69\uD83C\uDFFD\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f4bb.png\" alt=\"\uD83D\uDCBB\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"> de práctica<a href=\"#un-ejemplo-%f0%9f%91%a9%f0%9f%8f%bd-%f0%9f%92%bb-de-practica\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\" Un ejemplo &#x1f469;&#x1f3fd; &#x1f4bb; de práctica\"></a></h2>\n<p><a href=\"https://github.blog/2023-05-12-how-i-used-github-copilot-to-build-a-browser-extension/\">Intenta pedirle a GitHub Copilot que cree una extensión del navegador</a>.</p>\n<p>Para comenzar, deberás tener <a href=\"https://docs.github.com/copilot/getting-started-with-github-copilot\">GitHub Copilot instalado y abierto en tu IDE</a>. También tenemos acceso a una vista previa temprana del chat de <a href=\"https://gh.io/copilotx\">GitHub Copilot</a>, que es lo que hemos estado usando cuando tenemos preguntas sobre nuestro código. Si no tienes el chat de GitHub Copilot, <a href=\"https://github.com/github-copilot/chat_waitlist_signup/join\">regístrate en la lista de espera</a>. Hasta entonces, puede emparejar <a href=\"https://github.com/features/copilot\">GitHub Copilot</a> con ChatGPT.</p>\n<h2> Guías de elaboración de avisos de IA más generativas\n<li><a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp\">Una guía para principiantes sobre ingeniería rápida con GitHub Copilot</a></li>\n<li><a href=\"https://dev.to/mishmanners/prompt-engineering-for-ai-l02-temp-slug-5273047?preview=551f0e25cb04a20f52bbf20dc42b6048806734e33f1c2c9f35372a5b8eab93eb2c52a82c2bd958b4dfabba5d52e7bd8b320ed66ae8e5275e7f006d55\">Ingeniería rápida para IA</a></li>\n<li><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/\">Cómo GitHub Copilot está mejorando en la comprensión de tu código</a></li>\n\n<hr>\n</h2></details>\n<hr>\n<p>Generative AI coding tools are transforming the way developers approach daily coding tasks. From documenting our codebases to generating unit tests, these tools are helping to accelerate our workflows. However, just like with any emerging tech, there&#8217;s always a learning curve. As a result, developers—beginners and experienced alike— sometimes feel frustrated when AI-powered coding assistants don&#8217;t generate the output they want. (Feel familiar?)</p>\n<p>For example, when asking GitHub Copilot to draw an ice cream cone <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f366.png\" alt=\"\uD83C\uDF66\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\">using p5.js, a JavaScript library for creative coding, we kept receiving irrelevant suggestions—or sometimes no suggestions at all. But when we learned more about the way that GitHub Copilot processes information, we realized that we had to adjust the way we communicated with it.</p>\n<p>Here’s an example of GitHub Copilot generating an irrelevant solution:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577016-2c22e7a6-6d99-47e2-8f45-1322ac2d2e1b.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" ice=\"\" cream=\"\" using=\"\" p5.js,\"=\"\" the=\"\" ai=\"\" pair=\"\" programmer=\"\" generated=\"\" an=\"\" image=\"\" that=\"\" looked=\"\" like=\"\" a=\"\" bulls-eye=\"\" target=\"\" sitting=\"\" on=\"\" top=\"\" of=\"\" a=\"\" stand.\"=\"\"></p>\n<p>When we adjusted our prompt, we were able to generate more accurate results:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577026-e97a29d4-1378-48c1-a8ff-6adbc3bb2d8d.gif\" alt=\"When we wrote this prompt to GitHub Copilot, \" draw=\"\" an=\"\" ice=\"\" cream=\"\" cone=\"\" with=\"\" an=\"\" ice=\"\" cream=\"\" scoop=\"\" and=\"\" a=\"\" cherry=\"\" on=\"\" top,\"=\"\" and=\"\" specified=\"\" details=\"\" about=\"\" each=\"\" part=\"\" of=\"\" the=\"\" picture,=\"\" github=\"\" copilot=\"\" generated=\"\" a=\"\" picture=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" cone=\"\" that=\"\" we=\"\" wanted.=\"\" here=\"\" were=\"\" the=\"\" prompts=\"\" for=\"\" those=\"\" details:=\"\" 1)=\"\" \"the=\"\" ice=\"\" cream=\"\" cone=\"\" will=\"\" be=\"\" a=\"\" triangle=\"\" with=\"\" the=\"\" point=\"\" facing=\"\" down,=\"\" wider=\"\" point=\"\" at=\"\" the=\"\" top.=\"\" it=\"\" should=\"\" have=\"\" light=\"\" brown=\"\" fill\"=\"\" 2)=\"\" \"the=\"\" ice=\"\" cream=\"\" scoop=\"\" will=\"\" be=\"\" a=\"\" half=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" cone=\"\" with=\"\" a=\"\" light=\"\" pink=\"\" fill\"=\"\" 3)=\"\" \"the=\"\" cherry=\"\" will=\"\" be=\"\" a=\"\" circle=\"\" on=\"\" top=\"\" of=\"\" the=\"\" ice=\"\" cream=\"\" scoop=\"\" with=\"\" a=\"\" red=\"\" fill\"=\"\" 4)=\"\" \"light=\"\" blue=\"\" background\"\"=\"\"></p>\n<p>We’re both developers and AI enthusiasts ourselves. I, <a href=\"https://github.com/blackgirlbytes\">Rizel</a>, have used GitHub Copilot to build a <a href=\"https://github.blog/2023-05-12-how-i-used-github-copilot-to-build-a-browser-extension/\">browser extension</a>, <a href=\"https://github.com/blackgirlbytes/rock-paper-scissors-copilot\">rock, paper, scissors game</a>, and to <a href=\"https://dev.to/github/how-to-send-a-tweet-with-github-copilot-4ih7\">send a Tweet</a>. And I, <a href=\"https://github.com/mishmanners\">Michelle</a>, launched an AI company in 2016. We’re both developer advocates at GitHub and love to share our top tips for working with GitHub Copilot.</p>\n<p>In this guide for GitHub Copilot, we’ll cover:</p>\n<ul>\n<li><a href=\"#whats-a-prompt-and-what-is-prompt-engineering\">What exactly a prompt is and what prompt engineering is, too</a> (hint: it depends on whether you’re talking to a developer or a machine learning researcher).</li>\n<li><a href=\"#3-best-practices-for-prompt-crafting-with-github-copilot\">Three best practices</a> and <a href=\"#three-additional-tips-for-prompt-crafting-with-github-copilot\">three additional tips for prompt crafting with GitHub Copilot</a>. </li>\n<li><a href=\"#a-practice-example\">An example</a> where you can try your hand at prompting GitHub Copilot to assist you in  building a browser extension.</li>\n</ul>\n<h3 id=\"progress-over-perfection\">Progress over perfection<a href=\"#progress-over-perfection\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Progress over perfection\"></a></h3>\n<p>Even with our experience using AI, we recognize that everyone is in a trial and error phase with generative AI technology. We also know the challenge of providing generalized prompt-crafting tips because models vary, as do the individual problems that developers are working on. This isn’t an end-all, be-all guide. Instead, we’re sharing what we’ve learned about prompt crafting to accelerate collective learning during this new age of software development.</p>\n<h2 id=\"whats-a-prompt-and-what-is-prompt-engineering\">What’s a prompt and what is prompt engineering?<a href=\"#whats-a-prompt-and-what-is-prompt-engineering\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"What’s a prompt and what is prompt engineering?\"></a></h2>\n<p>It depends on who you talk to.</p>\n<p>In the context of generative AI coding tools, <strong>a prompt can mean different things, depending on whether you’re asking machine learning (ML) researchers</strong> who are building and fine-tuning these tools, <strong>or developers</strong> who are using them in their IDEs.</p>\n<p><strong>For this guide, we’ll define the terms from the point of view of a developer who’s using a generative AI coding tool in the IDE</strong>. But to give you the full picture, we also added the ML researcher definitions below in our chart.</p>\n<div class=\"content-table-wrap\"><table>\n<tr>\n<th></th>\n<th><strong>Prompts</strong></th>\n<th><strong>Prompt engineering</strong></th>\n<th><strong>Context</strong></th>\n</tr>\n<tr>\n<td>Developer</td>\n<td><strong>Code blocks, individual lines of code, or natural language comments a developer writes</strong> to generate a specific suggestion from GitHub Copilot</td>\n<td><strong>Providing instructions or comments in the IDE</strong> to generate specific coding suggestions </td>\n<td><strong>Details that are provided by a developer</strong> to specify the desired output from a generative AI coding tool</td>\n</tr>\n<tr>\n<td>ML researcher</td>\n<td><strong>Compilation of IDE code and relevant context</strong> (IDE comments, code in open files, etc.) <strong>that is continuously generated by algorithms</strong> and sent to the model of a generative AI coding tool</td>\n<td><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">Creating algorithms that will generate prompts (compilations of IDE code and context) for a large language model</a></td>\n<td><strong>Details</strong> (<a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">like data from your open files and code you’ve written before and after the cursor</a>) <strong>that algorithms send</strong> to a large language model (LLM) as additional information about the code<br>\n  </td></tr>\n</table></div>\n<h2 id=\"3-best-practices-for-prompt-crafting-with-github-copilot\">3 best practices for prompt crafting with GitHub Copilot<a href=\"#3-best-practices-for-prompt-crafting-with-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3 best practices for prompt crafting with GitHub Copilot\"></a></h2>\n<h3 id=\"1-set-the-stage-with-a-high-level-goal-%f0%9f%96%bc%ef%b8%8f\">1. Set the stage with a high-level goal. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5bc.png\" alt=\"\uD83D\uDDBC\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#1-set-the-stage-with-a-high-level-goal-%f0%9f%96%bc%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"1. Set the stage with a high-level goal. &#x1f5bc;\"></a></h3>\n<p>This is most helpful if you have a blank file or empty codebase. In other words, if GitHub Copilot has zero context of what you want to build or accomplish, setting the stage for the AI pair programmer can be really useful. It helps to prime GitHub Copilot with a big picture description of what you want it to generate—before you jump in with the details.</p>\n<p>When prompting GitHub Copilot, think of the process as having a conversation with someone: How should I break down the problem so we can solve it together? How would I approach pair programming with this person?</p>\n<p>For example, when building a markdown editor in Next.jst, we could write a comment like this</p>\n<pre><code>/*\nCreate a basic markdown editor in Next.js with the following features:\n- Use react hooks\n- Create state for markdown with default text \"type markdown here\"\n- A text area where users can write markdown \n- Show a live preview of the markdown text as I type\n- Support for basic markdown syntax like headers, bold, italics \n- Use React markdown npm package \n- The markdown text and resulting HTML should be saved in the component's state and updated in real time \n*/\n</code></pre>\n<p>This will prompt GitHub Copilot to generate the following code and produce a very simple, unstyled but functional markdown editor in less than 30 seconds. We can use the remaining time to style the component:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245577032-c1ee10ef-3c24-458d-94af-8408484a1ee0.gif\" alt=\"We used this prompt to build a markdown editor in Next.jst using GitHub Copilot:\n- Use react hooks\n- Create state for markdown with default text \" type=\"\" markdown=\"\" here\"=\"\" -=\"\" a=\"\" text=\"\" area=\"\" where=\"\" users=\"\" can=\"\" write=\"\" markdown=\"\" -=\"\" show=\"\" a=\"\" live=\"\" preview=\"\" of=\"\" the=\"\" markdown=\"\" text=\"\" as=\"\" i=\"\" type=\"\" -=\"\" support=\"\" for=\"\" basic=\"\" markdown=\"\" syntax=\"\" like=\"\" headers,=\"\" bold,=\"\" italics=\"\" -=\"\" use=\"\" react=\"\" markdown=\"\" npm=\"\" package=\"\" -=\"\" the=\"\" markdown=\"\" text=\"\" and=\"\" resulting=\"\" html=\"\" should=\"\" be=\"\" saved=\"\" in=\"\" the=\"\" component's=\"\" state=\"\" and=\"\" updated=\"\" in=\"\" real=\"\" time\"=\"\"></p>\n<p><em>Note: this level of detail helps you to create a more desired output, but the results may still be non-deterministic. For example, in the comment, we prompted GitHub Copilot to create default text that says “type markdown here” but instead it generated “markdown preview” as the default words.</em></p>\n<h3 id=\"2-make-your-ask-simple-and-specific-aim-to-receive-a-short-output-from-github-copilot-%f0%9f%97%a8%ef%b8%8f\">2. Make your ask simple and specific. Aim to receive a short output from GitHub Copilot. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f5e8.png\" alt=\"\uD83D\uDDE8\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#2-make-your-ask-simple-and-specific-aim-to-receive-a-short-output-from-github-copilot-%f0%9f%97%a8%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"2. Make your ask simple and specific. Aim to receive a short output from GitHub Copilot. &#x1f5e8;\"></a></h3>\n<p>Once you communicate your main goal to the AI pair programmer, <strong>articulate the logic and steps it needs to follow for achieving that goal</strong>. GitHub Copilot better understands your goal when you break things down. (Imagine you&#8217;re writing a recipe. You’d break the cooking process down into discrete steps–not write a paragraph describing the dish you want to make.)</p>\n<p><strong>Let GitHub Copilot generate the code after each step</strong>, rather than asking it to generate a bunch of code all at once.</p>\n<p>Here’s an example of us providing GitHub Copilot with step-by-step instructions for reversing a function:</p>\n<p><img decoding=\"async\" src=\"https://github.blog/wp-content/uploads/2023/06/245886121-885cc0ed-97c2-4b25-be74-02e7b34711a7.gif\" alt=\"We prompted GitHub Copilot to reverse a sentence by writing six prompts one at a time. This allowed GitHub Copilot to generate a suggestion for one prompt before moving onto the text. It also gave us the chance to tweak the suggested code before moving onto the next step. The six prompts we used were: First, let's make the first letter of the sentence lower case if it's not an 'I.' Next, let's split the sentence into an array of words. Then, let's take out the punctuation marks from the sentence. Now, let's remove the punctuation marks from the sentence. Let's reverse the sentence and join it back together. Finally, let's make the first letter of the sentence capital and add the punctuation marks.\"></p>\n<h3 id=\"3-give-github-copilot-an-example-or-two-%e2%9c%8d%ef%b8%8f\">3. Give GitHub Copilot an example or two. <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/270d.png\" alt=\"✍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#3-give-github-copilot-an-example-or-two-%e2%9c%8d%ef%b8%8f\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3. Give GitHub Copilot an example or two. &#x270d;\"></a></h3>\n<p>Learning from examples is not only useful for humans, but also for your AI pair programmer. For instance, we wanted to extract the names from the array of data below and store it in a new array:</p>\n<pre><code>const data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n</code></pre>\n<p>When we didn’t show GitHub Copilot an example …</p>\n<pre><code>// Map through an array of arrays of objects to transform data\nconst data = [\n  [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 }\n  ],\n  [\n    { name: 'Bob', age: 40 }\n  ]\n];\n\nconst mappedData = data.map(x =&gt; [x.name](http://x.name/));\n\nconsole.log(mappedData);\n\n// Results: [undefined, undefined]\n</code></pre>\n<p>It generated an incorrect usage of map:</p>\n<pre><code>const mappedData = data.map(x =&gt; [x.name](http://x.name/));\n\nconsole.log(mappedData);\n\n// Results: [undefined, undefined]\n</code></pre>\n<p>By contrast, when we did provide an example …</p>\n<pre><code>// Map through an array of arrays of objects\n// Example: Extract names from the data array\n// Desired outcome: ['John', 'Jane', 'Bob']\nconst data = [\n  [{ name: 'John', age: 25 }, { name: 'Jane', age: 30 }],\n  [{ name: 'Bob', age: 40 }]\n];\n\n\nconst mappedData = data.flatMap(sublist =&gt; sublist.map(person =&gt; person.name));\n\nconsole.log(mappedData);\n</code></pre>\n<p>We received our desired outcome.</p>\n<pre><code>const mappedData = data.flatMap(sublist =&gt; sublist.map(person =&gt; person.name));\n\nconsole.log(mappedData);\n// Results: ['John', 'Jane', 'Bob']\n</code></pre>\n<div class=\"post-content-cta\"><p>Read more about common approaches to AI training, such as <a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp/#1424065\">zero-shot, one-shot, and few-shot learning</a>.</p>\n</div>\n<h2 id=\"three-additional-tips-for-prompt-crafting-with-github-copilot\">Three additional tips for prompt crafting with GitHub Copilot<a href=\"#three-additional-tips-for-prompt-crafting-with-github-copilot\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Three additional tips for prompt crafting with GitHub Copilot\"></a></h2>\n<p>Here are three additional tips to help guide your conversation with GitHub Copilot.</p>\n<h3 id=\"1-experiment-with-your-prompts\">1. Experiment with your prompts.<a href=\"#1-experiment-with-your-prompts\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"1. Experiment with your prompts.\"></a></h3>\n<p>Just how conversation is more of an art than a science, so is prompt crafting. So, if you don’t receive what you want on the first try, recraft your prompt by following the best practices above.</p>\n<p>For example, the prompt below is vague. It doesn’t provide any context or boundaries for GitHub Copilot to generate relevant suggestions.</p>\n<pre><code># Write some code for grades.py  \n</code></pre>\n<p>We iterated on the prompt to be more specific, but we still didn’t get the exact result we were looking for. This is a good reminder that adding specificity to your prompt is harder than it sounds. It’s difficult to know, from the start, which details you should include about your goal to generate the most useful suggestions from GitHub Copilot. That’s why we encourage experimentation.</p>\n<p>The version of the prompt below is more specific than the one above, but it doesn’t clearly define the input and output requirements.</p>\n<pre><code># Implement a function in grades.py to calculate the average grade\n</code></pre>\n<p>We experimented with the prompt once more by setting boundaries and outlining what we wanted the function to do. We also rephrased the comment so the function was more clear (giving GitHub Copilot a clear intention to verify against).</p>\n<p>This time, we got the results we were looking for.</p>\n<pre><code># Implement the function calculate_average_grade in grades.py that takes a list of grades as input and returns the average grade as a floating-point number\n</code></pre>\n<h3 id=\"2-keep-a-couple-of-relevant-tabs-open\">2. Keep a couple of relevant tabs open.<a href=\"#2-keep-a-couple-of-relevant-tabs-open\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"2. Keep a couple of relevant tabs open.\"></a></h3>\n<p>We don’t have an exact number of tabs that you should keep open to help GitHub Copilot contextualize your code, but from our experience, we’ve found that one or two is helpful.</p>\n<p><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code\">GitHub Copilot uses a technique called neighboring tabs</a> that allows the AI pair programmer to contextualize your code by processing all of the files open in your IDE instead of just the single file you’re working on. However, it’s not guaranteed that GItHub Copilot will deem all open files as necessary context for your code.</p>\n<h3 id=\"3-use-good-coding-practices\">3. Use good coding practices.<a href=\"#3-use-good-coding-practices\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"3. Use good coding practices.\"></a></h3>\n<p>That includes providing descriptive variable names and functions, and following consistent coding styles and patterns. We’ve found that working with GitHub Copilot encourages us to follow good coding practices we’ve learned throughout our careers.</p>\n<p>For example, here we used a descriptive function name and followed the codebase&#8217;s patterns of leveraging snake case.</p>\n<pre><code>def authenticate_user(username, password):\n</code></pre>\n<p>As a result, GitHub Copilot generated a relevant code suggestion:</p>\n<pre><code>def authenticate_user(username, password):\n    # Code for authenticating the user\n    if is_valid_user(username, password):\n        generate_session_token(username)\n        return True\n    else:\n        return False\n</code></pre>\n<p>Compare this to the example below, where we introduced an inconsistent coding style and poorly named our function.</p>\n<pre><code>def rndpwd(l):\n</code></pre>\n<p>Instead of suggesting code, GitHub Copilot generated a comment that said, “Code goes here.”</p>\n<pre><code>def rndpwd(l):\n    # Code goes here\n</code></pre>\n<h3 id=\"stay-smart\">Stay smart<a href=\"#stay-smart\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Stay smart\"></a></h3>\n<p>The LLMs behind generative AI coding tools are designed to find and extrapolate patterns from their training data, apply those patterns to existing language, and then produce code that follows those patterns. Given the sheer scale of these models, they might generate a code sequence that doesn’t even exist yet. <strong>Just as you would review a colleague’s code, you should always assess, analyze, and validate AI-generated code.</strong></p>\n<h2 id=\"a-practice-example-%f0%9f%91%a9%f0%9f%8f%bd%f0%9f%92%bb\">A practice example <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f469-1f3fd-200d-1f4bb.png\" alt=\"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBB\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"><a href=\"#a-practice-example-%f0%9f%91%a9%f0%9f%8f%bd%f0%9f%92%bb\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"A practice example &#x1f469;&#x1f3fd;&#x200d;&#x1f4bb;\"></a></h2>\n<p><a href=\"https://github.blog/2023-05-12-how-i-used-github-copilot-to-build-a-browser-extension/\">Try your hand at prompting GitHub Copilot to build a browser extension</a>.</p>\n<p>To get started, you’ll need to have <a href=\"https://docs.github.com/copilot/getting-started-with-github-copilot\">GitHub Copilot installed and open in your IDE</a>. We also have access to an early preview of <a href=\"https://gh.io/copilotx\">GitHub Copilot chat</a>, which is what we’ve been using when we have questions about our code. If you don’t have GitHub Copilot chat, <a href=\"https://github.com/github-copilot/chat_waitlist_signup/join\">sign up for the waitlist</a>. Until then you can pair <a href=\"https://github.com/features/copilot\">GitHub Copilot </a>with ChatGPT.</p>\n<h2 id=\"more-generative-ai-prompt-crafting-guides\">More generative AI prompt crafting guides<a href=\"#more-generative-ai-prompt-crafting-guides\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"More generative AI prompt crafting guides\"></a></h2>\n<ul>\n<li><a href=\"https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp\">A beginner’s guide to prompt engineering with GitHub Copilot </a></li>\n<li><a href=\"https://dev.to/mishmanners/prompt-engineering-for-ai-l02-temp-slug-5273047?preview=551f0e25cb04a20f52bbf20dc42b6048806734e33f1c2c9f35372a5b8eab93eb2c52a82c2bd958b4dfabba5d52e7bd8b320ed66ae8e5275e7f006d55\">Prompt engineering for AI </a></li>\n<li><a href=\"https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/\">How GitHub Copilot is getting better at understanding your code</a> </li>\n</ul>\n",
    "Permalink": "https://github.blog/2023-06-20-how-to-write-better-prompts-for-github-copilot/",
    "Links": [
      "https://github.blog/2023-05-17-how-github-copilot-is-getting-better-at-understanding-your-code/#how-github-copilot-understands-your-code",
      "https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp/#1424065",
      "https://github.blog/2023-05-12-how-i-used-github-copilot-to-build-a-browser-extension/",
      "https://docs.github.com/pt/copilot/getting-started-with-github-copilot",
      "https://github.com/features/preview/copilot-x",
      "https://github.com/github-copilot/chat_waitlist_signup/join",
      "https://github.com/features/copilot",
      "https://dev.to/github/a-beginners-guide-to-prompt-engineering-with-github-copilot-3ibp",
      "https://dev.to/mishmanners/prompt-engineering-for-ai-l02-temp-slug-5273047?preview=551f0e25cb04a20f52bbf20dc42b6048806734e33f1c2c9f35372a5b8eab93eb2c52a82c2bd958b4dfabba5d52e7bd8b320ed66ae8e5275e7f006d55",
      "https://docs.github.com/copilot/getting-started-with-github-copilot",
      "https://gh.io/copilotx",
      "https://github.com/blackgirlbytes",
      "https://github.com/blackgirlbytes/rock-paper-scissors-copilot",
      "https://dev.to/github/how-to-send-a-tweet-with-github-copilot-4ih7",
      "https://github.com/mishmanners"
    ],
    "Media": [
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f366.png",
      "https://github.blog/wp-content/uploads/2023/06/245577016-2c22e7a6-6d99-47e2-8f45-1322ac2d2e1b.gif",
      "https://github.blog/wp-content/uploads/2023/06/245577026-e97a29d4-1378-48c1-a8ff-6adbc3bb2d8d.gif",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f5bc.png",
      "https://github.blog/wp-content/uploads/2023/06/245577032-c1ee10ef-3c24-458d-94af-8408484a1ee0.gif",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f5e8.png",
      "https://github.blog/wp-content/uploads/2023/06/245886121-885cc0ed-97c2-4b25-be74-02e7b34711a7.gif",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/270d.png",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f469-1f3fd-200d-1f4bb.png",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f469-1f3fd.png",
      "https://s.w.org/images/core/emoji/14.0.0/72x72/1f4bb.png"
    ]
  },
  {
    "Title": "Developers need the right to challenge junk patents",
    "Author": "Mike Linksvayer",
    "TextSummary": "The United States Patent and Trademark Office (USPTO) recently proposed rule changes that will make it harder to challenge low quality patents. Without the ability to quickly and efficiently challenge wrongly granted patents, innovation and developers suffer.",
    "RawContent": "<p>The United States Patent and Trademark Office (USPTO) recently <a href=\"https://www.federalregister.gov/documents/2023/04/21/2023-08239/changes-under-consideration-to-discretionary-institution-practices-petition-word-count-limits-and\">proposed rule changes</a> that will make it harder to challenge low quality patents. We echo the concerns raised by the <a href=\"https://www.linuxfoundation.org/blog/stand-up-for-open-source-software-patent-defense\">Linux Foundation</a> and the <a href=\"https://www.eff.org/deeplinks/2023/06/our-right-challenge-junk-patents-under-threat\">Electronic Frontier Foundation</a>. Without the ability to quickly and efficiently challenge wrongly granted patents, innovation and developers suffer.</p>\n<h2 id=\"the-impact-on-developers-startups-and-small-companies\">The impact on developers, startups, and small companies<a href=\"#the-impact-on-developers-startups-and-small-companies\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"The impact on developers, startups, and small companies\"></a></h2>\n<p>In <a href=\"https://en.wikipedia.org/wiki/Leahy%E2%80%93Smith_America_Invents_Act\">2011</a>, Congress created <a href=\"https://en.wikipedia.org/wiki/Inter_partes_review\">inter partes review</a> administered by the <a href=\"https://en.wikipedia.org/wiki/Patent_Trial_and_Appeal_Board\">Patent Trial and Appeal Board</a> (PTAB) as a lower-cost, more efficient procedure for the public to challenge low quality patents–patents that are not new or are obvious over past innovation–and so should not have been granted in the first place. The PTAB has saved billions in litigation costs and reduced the burden of patent trolls on developers, including <a href=\"https://www.wired.com/2012/09/pwersonalweb/\">startups</a> and <a href=\"https://blog.opensource.org/gnome-patent-troll-stripped-of-patent-rights/\">open source projects</a>.</p>\n<p>By restricting access to the PTAB, the proposed rule would be a step backward to an environment that allows low quality patents to stifle technological progress, <a href=\"https://thehill.com/opinion/congress-blog/4020170-leahy-new-uspto-rulemaking-should-seek-to-strengthen-not-weaken-the-america-invents-act/\">directly in conflict with the legislation</a> Congress passed to enable the public to remove bad patents.</p>\n<p>A stated goal of the changes by the USPTO is to protect against “patentee harassment,” but, in our experience, this is a solution in search of a problem. On the contrary, allowing anyone to weed out low quality patents is vital to protect innovation and promote the public interest.</p>\n<p>Weak patents asserted widely against our ecosystems introduce friction in the innovation cycle, hinder developers&#8217; creativity, and impede freedom to make technological advancements. By ensuring we all have the right to advise the patent office that it granted a patent it shouldn’t have, we can ensure a fair and equitable patent system that fosters innovation and benefits all.</p>\n<h2 id=\"taking-action\">Taking action<a href=\"#taking-action\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Taking action\"></a></h2>\n<p>We urge all developers and supporters–whether a student, open source maintainer, or enterprise <em>(see <a href=\"https://www.regulations.gov/comment/PTO-P-2020-0022-0602\">Microsoft’s comment</a>)</em>–to voice their opposition today to the proposed rules using the USPTO&#8217;s <a href=\"https://www.federalregister.gov/documents/2023/04/21/2023-08239/changes-under-consideration-to-discretionary-institution-practices-petition-word-count-limits-and\">public comment system</a>. Regardless of the length or technicality of your comments, your input is vital in safeguarding innovation and advocating for a patent system that serves developers&#8217; interests. Together, we can defend our right to challenge junk patents, protect developers from patent abuse, and foster an environment that nurtures innovation.</p>\n",
    "Permalink": "https://github.blog/2023-06-19-developers-need-the-right-to-challenge-junk-patents/",
    "Links": [
      "https://www.federalregister.gov/documents/2023/04/21/2023-08239/changes-under-consideration-to-discretionary-institution-practices-petition-word-count-limits-and",
      "https://www.linuxfoundation.org/blog/stand-up-for-open-source-software-patent-defense",
      "https://www.eff.org/deeplinks/2023/06/our-right-challenge-junk-patents-under-threat",
      "https://en.wikipedia.org/wiki/Leahy%E2%80%93Smith_America_Invents_Act",
      "https://en.wikipedia.org/wiki/Inter_partes_review",
      "https://en.wikipedia.org/wiki/Patent_Trial_and_Appeal_Board",
      "https://www.wired.com/2012/09/pwersonalweb/",
      "https://blog.opensource.org/gnome-patent-troll-stripped-of-patent-rights/",
      "https://thehill.com/opinion/congress-blog/4020170-leahy-new-uspto-rulemaking-should-seek-to-strengthen-not-weaken-the-america-invents-act/",
      "https://www.regulations.gov/comment/PTO-P-2020-0022-0602"
    ],
    "Media": []
  },
  {
    "Title": "Exploring GitHub with the redesigned navigation, now in public beta",
    "Author": "Justin Young",
    "TextSummary": "GitHub’s redesigned navigation is enabled for all users as a public beta.",
    "RawContent": "<p>GitHub’s redesigned <strong>navigation is enabled for all users as a public beta</strong>.</p>\n<p>Millions of users build with GitHub every day, and we&#8217;re constantly working to make the platform user-friendly, more accessible, and an integral part of your workflow. To that end, GitHub has introduced a brand-new version of the site-wide navigation, redesigned to make it easier to find your way around the site and quickly access your most-used features and functionality.</p>\n<p>We know that all types of people build with GitHub every day, from developers to designers, from open source to enterprise, and from learners to skilled engineers. That&#8217;s why we&#8217;ve built the new navigation with everyone in mind.</p>\n<h2 id=\"your-work-quick-and-easy-to-access\">Your work, quick and easy to access<a href=\"#your-work-quick-and-easy-to-access\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Your work, quick and easy to access\"></a></h2>\n<p>We’ve kept the functionality you know and love from the old navigation, while adding some improvements that make it easier to find your way around and faster to find the work you care about.</p>\n<p>We improved wayfinding by adding breadcrumbs that reflect the information architecture of every page on GitHub. You can easily determine where you are on GitHub and navigate laterally or vertically in the information hierarchy.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72465 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=1024&#038;resize=1024%2C538\" alt=\"An image of the upper-left part of a GitHub webpage that shows breadcrumbs in the new navigation UI. There is a breadcrumb named “react” representing the current page, and a breadcrumb to the left of that named “primer,” representing the parent page of the current page.\" width=\"1024\" height=\"538\" srcset=\"https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=2400 2400w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=1024&#038;resize=1024%2C538 1024w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=1536 1536w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=2048 2048w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n<p>A new site-wide menu contains links to frequently visited areas of the product—like issues, pull requests, and discussions—as well as links to your teams and most-used repositories. Open the site-wide menu by clicking the hamburger button (with three horizontal lines).</p>\n<div style=\"width: 1592px;\" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement('video');</script><![endif]-->\n<video class=\"wp-video-shortcode js-viewport-aware-video events-none\" id=\"video-72462-1\" width=\"1592\" height=\"1080\" loop=\"1\" autoplay=\"1\" preload=\"metadata\" playsinline=\"1\" muted=\"1\"><source type=\"video/mp4\" src=\"https://github.blog/wp-content/uploads/2023/06/244480993-d5dc98ca-d101-4eef-af63-2061d075ffba.mp4?_=1\"><a href=\"https://github.blog/wp-content/uploads/2023/06/244480993-d5dc98ca-d101-4eef-af63-2061d075ffba.mp4\">https://github.blog/wp-content/uploads/2023/06/244480993-d5dc98ca-d101-4eef-af63-2061d075ffba.mp4</a></video></div>\n<p>Within the site-wide menu, you can filter your repositories and teams.</p>\n<div style=\"width: 1592px;\" class=\"wp-video\"><video class=\"wp-video-shortcode js-viewport-aware-video events-none\" id=\"video-72462-2\" width=\"1592\" height=\"1080\" loop=\"1\" autoplay=\"1\" preload=\"metadata\" playsinline=\"1\" muted=\"1\"><source type=\"video/mp4\" src=\"https://github.blog/wp-content/uploads/2023/06/244480873-257e5bee-3a3f-4591-8b46-32fd05445762.mp4?_=2\"><a href=\"https://github.blog/wp-content/uploads/2023/06/244480873-257e5bee-3a3f-4591-8b46-32fd05445762.mp4\">https://github.blog/wp-content/uploads/2023/06/244480873-257e5bee-3a3f-4591-8b46-32fd05445762.mp4</a></video></div>\n<p>Crucial links like issues, pull requests, and notifications are always just one click away in the upper-right of each page.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72468 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=1024&#038;resize=1024%2C538\" alt=\"An image of the upper-right part of a GitHub webpage that shows three buttons in the new navigation UI. Clicking a button navigates to issues, pull requests, or notifications respectively.\" width=\"1024\" height=\"538\" srcset=\"https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=2400 2400w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=1024&#038;resize=1024%2C538 1024w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=1536 1536w, https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=2048 2048w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n<p>The redesigned navigation integrates code search and the command palette to find and jump to whatever you’re looking for—whether it’s a code snippet, an organization, or another user.</p>\n<p>Finally, some things haven’t changed: clicking Mona—the GitHub logo—will take you to the home dashboard, and clicking your avatar will open the user menu.</p>\n<h2 id=\"brand-new-under-the-hood-and-more-accessible\">Brand new under the hood (and more accessible)<a href=\"#brand-new-under-the-hood-and-more-accessible\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Brand new under the hood (and more accessible)\"></a></h2>\n<p>The navigation was rearchitected to provide you with a more accessible, consistent, and responsive experience across all devices.</p>\n<p>We designed the navigation with accessibility in mind and have tested it with assistive technology. GitHub is <a href=\"https://accessibility.github.com/\">committed to improving the developer experience for people with disabilities</a>, and the new navigation is an essential part of that experience for virtually everyone. Read more about <a href=\"https://github.blog/2023-05-11-navigation-and-search-improvements-for-accessibility/\">accessibility features of the new navigation</a>.</p>\n<p>Additionally, the navigation is now consistent on every page and responsive for every device size. We improved the mobile experience to ensure you can reliably access and use GitHub features wherever you are.</p>\n<p>Finally, we&#8217;ve given the navigation a fresh coat of paint with GitHub&#8217;s open-source design system, <a href=\"https://primer.style/\">Primer</a>. The navigation leverages the Primer component library, along with <a href=\"https://primer.style/design/foundations/icons\">Octicons</a>—the Primer icon library. Using Primer guarantees long-term support of the navigation and UI, ongoing accessibility improvements (such as a <a href=\"https://github.blog/2023-05-11-unlocking-inclusive-design-how-primers-color-system-is-making-github-com-more-inclusive/\">recent update to the color system</a>), and consistent component styles and behaviors across GitHub.</p>\n<h2 id=\"try-it-out\">Try it out<a href=\"#try-it-out\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Try it out\"></a></h2>\n<p>We&#8217;re committed to making GitHub user-friendly and more accessible to everyone, and the new navigation is an exciting step in that direction.</p>\n<p>We can&#8217;t wait for you to try the new navigation and let us know what you think. To share feedback, please visit the <a href=\"https://gh.io/navigation-update\">feedback portal</a>.</p>\n<p><em><strong>Note:</strong> while in beta, the new navigation can be switched on and off under <strong>Global navigation update</strong> in <a href=\"https://docs.github.com/en/get-started/using-github/exploring-early-access-releases-with-feature-preview\">Feature preview</a>.</em></p>\n",
    "Permalink": "https://github.blog/2023-06-15-exploring-github-with-the-redesigned-navigation-now-in-public-beta/",
    "Links": [
      "https://github.blog/wp-content/uploads/2023/06/244480993-d5dc98ca-d101-4eef-af63-2061d075ffba.mp4",
      "https://github.blog/wp-content/uploads/2023/06/244480873-257e5bee-3a3f-4591-8b46-32fd05445762.mp4",
      "https://accessibility.github.com/",
      "https://github.blog/2023-05-11-navigation-and-search-improvements-for-accessibility/",
      "https://primer.style/",
      "https://primer.style/design/foundations/icons",
      "https://github.blog/2023-05-11-unlocking-inclusive-design-how-primers-color-system-is-making-github-com-more-inclusive/",
      "https://gh.io/navigation-update",
      "https://docs.github.com/en/get-started/using-github/exploring-early-access-releases-with-feature-preview"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-1.png?w=1024&resize=1024%2C538",
      "https://github.blog/wp-content/uploads/2023/06/global-navigation-beta-2.png?w=1024&resize=1024%2C538"
    ]
  },
  {
    "Title": "CodeQL zero to hero part 2: getting started with CodeQL",
    "Author": "Sylwia Budzynska",
    "TextSummary": "Learn the basics of CodeQL and how to use it for security research! In this blog, we will teach you how to leverage GitHub’s static analysis tool CodeQL to write custom CodeQL queries.",
    "RawContent": "<p><a href=\"https://codeql.github.com/\">CodeQL</a> is a static analysis tool that can be used to automatically scan your applications for vulnerabilities and to assist with a manual code review. In this blog, we will look closer at CodeQL and how to write CodeQL queries.</p>\n<p>Below, we include voluntary challenges, but it is highly recommended to do them while reading through the blog to get a better understanding of CodeQL, how to use it, and learn a few new tips and tricks about the tool.</p>\n<h2 id=\"recapping-the-fundamentals\">Recapping the fundamentals<a href=\"#recapping-the-fundamentals\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Recapping the fundamentals\"></a></h2>\n<p>The <a href=\"https://github.blog/2023-03-31-codeql-zero-to-hero-part-1-the-fundamentals-of-static-analysis-for-vulnerability-research/\">first part of the CodeQL zero to hero series</a> introduced some of the fundamental concepts of static analysis for vulnerability research—sources, sinks, data flow analysis, and taint analysis (taint tracking). Data flow analysis is a static analysis method that is commonly used to track untrusted inputs in the code (sources) and find if they are used in dangerous functions (sinks). The connection between a source and a sink is called “data flow.” The data flow analysis and taint analysis methods are used by many static analysis tools, including CodeQL.</p>\n<p>The blog also introduced some common structures used in static analysis methods, such as Abstract Syntax Tree (AST), Control Flow Graph (CFG), and others. You don’t need to know all of them, but reviewing the first blog will help you in the long run, since mentions of these structures will appear in this and next blog posts.</p>\n<p>Now, before diving into using CodeQL, let’s have a quick look at what we can do with CodeQL.</p>\n<h2 id=\"common-uses-of-codeql-for-security-research-and-application-security\">Common uses of CodeQL for security research and application security<a href=\"#common-uses-of-codeql-for-security-research-and-application-security\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Common uses of CodeQL for security research and application security\"></a></h2>\n<p>CodeQL offers automated scanning for vulnerabilities and can also be used as a tool to explore codebases and to assist with manual testing. There’s a number of uses for CodeQL, for example:</p>\n<ul>\n<li>Automated scanning of source code for hundreds of vulnerability types. See supported CWE list <a href=\"https://codeql.github.com/codeql-query-help/full-cwe/\">here</a>.</li>\n<li>Variant analysis. If a vulnerability has been found in my code base, for example, SQL injection, I can use CodeQL to see if there are other cases of the same vulnerability in a different part of the codebase.</li>\n<li>Assistance during manual code review. We can “ask CodeQL questions” about the analyzed codebase, for example:\n<ul>\n<li>What is my attack surface? Where should I start my audit?</li>\n<li>What are the sources (unsafe user-supplied input) in my code base?</li>\n<li>What are the sinks (dangerous functions)?</li>\n<li>Do the sources end up in any dangerous or untrusted functionality?</li>\n</ul>\n</li>\n</ul>\n<p>We will expand on these bullet points in this and in the coming blogs.</p>\n<h2 id=\"codeql\">CodeQL<a href=\"#codeql\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"CodeQL\"></a></h2>\n<p>CodeQL is a powerful static code analysis tool developed by Semmle (<a href=\"https://github.blog/2019-09-18-github-welcomes-semmle/\">acquired by GitHub in 2019</a>) and based on over decade of research by a team from Oxford University. CodeQL uses data flow analysis and taint analysis to find code errors, check code quality, and identify vulnerabilities. Currently, the supported languages include C/C++, C#, Go, Java, Kotlin, JavaScript, Python, Ruby, TypeScript, and Swift.</p>\n<p>The key idea behind CodeQL is that it analyzes code as data by creating a database of facts about your program and then using a special query language, called QL, to query the database for vulnerable patterns.</p>\n<p>Once we have the CodeQL database, we can ask it some questions (queries) about patterns that we want to find in the source code. For querying a CodeQL database, the QL query language is used. QL is an expressive, declarative, logical query language for identifying patterns in the database, that is vulnerabilities, for example, SQL injection. CodeQL queries are open-source, and anyone can create and contribute to CodeQL.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72475 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image5.png?w=1024&#038;resize=1024%2C414\" alt=\"\" width=\"1024\" height=\"414\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image5.png?w=1372 1372w, https://github.blog/wp-content/uploads/2023/06/image5.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image5.png?w=768 768w, https://github.blog/wp-content/uploads/2023/06/image5.png?w=1024&#038;resize=1024%2C414 1024w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" data-recalc-dims=\"1\"></p>\n<p>There are a lot of products, technologies, and concepts relating to CodeQL. That’s why we’ll start with introducing the most beginner-friendly technologies and work our way towards the more advanced topics. All of them can be useful for security researchers and developers, so feel free to choose the ones you enjoy using the most. As always, you don’t need to know or be familiar with all of them, but being aware of them and learning their fundamentals will certainly make auditing codebases and debugging easier, as well as give you more accurate results later on.</p>\n<h2 id=\"code-scanning-with-codeql\">Code scanning with CodeQL<a href=\"#code-scanning-with-codeql\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Code scanning with CodeQL\"></a></h2>\n<p>The easiest way to try out CodeQL is by enabling the <a href=\"https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning\">code scanning with CodeQL GitHub Action</a> on a repository. <a href=\"https://docs.github.com/actions/learn-github-actions/understanding-github-actions\">GitHub Actions</a> is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. An action is a custom application for the GitHub Actions platform that performs a complex but frequently repeated task. One of such actions is code scanning, which includes scanning with CodeQL. Enabling CodeQL on public repositories is free. Adding code scanning with CodeQL to repositories that use interpreted languages is straightforward and <a href=\"https://github.blog/2023-01-09-default-setup-a-new-way-to-enable-github-code-scanning/\">automatic</a> in most cases. See the guide <a href=\"https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-the-codeql-workflow-for-compiled-languages\">here</a> if you’d like to enable code scanning with CodeQL on a repository with a compiled language.</p>\n<p>Let’s try to enable code scanning with CodeQL on a public repository and see what results it gives us.</p>\n<details>\n<summary><strong>Challenge 1—Enable code scanning with CodeQL on a public repository</strong></summary>\n<p>Fork <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero\">GitHubSecurityLab/codeql-zero-to-hero</a> repository and follow the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-1/instructions.md\">instructions</a> in the repository for enabling code scanning with CodeQL. Look in the “Security” tab of your fork to see all the vulnerabilities found by CodeQL. The repository contains several intentionally vulnerable code snippets and the code scanning with CodeQL action will find several vulnerabilities.</p>\n</details>\n<p>The setup took less than a minute, plus a few minutes of scanning to generate alerts. Let’s have a look at one of the SQL injection alerts. Clicking on the “Show paths” button will show you the data flow path from the source to the sink. This path is very short, because the repository contains simple and deliberately vulnerable code for learning purposes. Most real vulnerabilities will have a longer path, likely spanning through several files.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72476 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image1-2.png?w=712&#038;resize=712%2C535\" alt=\"\" width=\"712\" height=\"535\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image1-2.png?w=712&#038;resize=712%2C535 712w, https://github.blog/wp-content/uploads/2023/06/image1-2.png?w=300 300w\" sizes=\"(max-width: 712px) 100vw, 712px\" data-recalc-dims=\"1\"></p>\n<p>What are the advantages of using code scanning with CodeQL as a security researcher?</p>\n<ul>\n<li>First of all, it’s automatic. You don’t need to install all the relevant dependencies and build the CodeQL database yourself. For most languages, code scanning with CodeQL will do it for you with the default setup/workflow.</li>\n<li>If you make any changes to the codebase (for example, new commits or pull requests), the code scanning with CodeQL action will rebuild and reanalyze the code for you, all within a few minutes.</li>\n<li>At last, it’s an excellent way to quickly test the source code for <strong>all</strong> the vulnerabilities that CodeQL supports, all within a few minutes. For a developer, it easily integrates into your build pipeline and prevents vulnerabilities from being introduced. For a security researcher, if you choose a new target for research, creating a fork of it and enabling code scanning with CodeQL on it will give you good insight into what issues the codebase might have. It’s a great way to get an initial idea of vulnerabilities there may be in a codebase, before digging into it further.</li>\n</ul>\n<p>It’s worth mentioning that the default code scanning with CodeQL action uses the default suite of CodeQL queries designed to be as accurate as possible with a very low false positive rate, but there are more (for example, experimental queries, false positive-prone queries, or exploratory queries), which can be enabled by changing the action configuration—see <a href=\"https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/built-in-codeql-query-suites#security-extended-query-suite\">docs</a>.</p>\n<h2 id=\"codeql-databases\">CodeQL databases<a href=\"#codeql-databases\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"CodeQL databases\"></a></h2>\n<p>We mentioned earlier that to analyze the source code, a CodeQL database is needed. A CodeQL database is created automatically when you enable the code scanning with CodeQL action on a repository, but what if you would like to modify a query or query for specific artifacts yourself?</p>\n<p>Let’s first have a look at how CodeQL databases are created and what they contain.</p>\n<p>At a high level, the process works as follows: for each language CodeQL extracts the source code, converting it to understand it either by parsing the code directly or by instrumenting executions of a compiler that already exists for that language within a running build. The database itself is a relational representation of the code base, which contains information about the different source code elements, such as classes and functions, and puts each of those into a separate table of data. Each language has its own database schema, but generally there is a table for classes, a table for functions and so on, and relationships between these tables. CodeQL standard libraries for each language provide wrappers and layers around that database schema. We use the QL query language to query these tables and relationships. There are some differences in how CodeQL databases are extracted for each language and what information they contain stemming from the intrinsic differences between the languages. We will see these differences when using QL to query the databases, but at a high level that most people use, the differences are barely visible.</p>\n<p>CodeQL databases already exist for many of the most popular open source projects on GitHub. GitHub hosts over 200,000 of them, and they are available to download by using the CodeQL extension in VS Code or GitHub via the <a href=\"https://docs.github.com/code-security/codeql-cli/using-the-codeql-cli/creating-codeql-databases#downloading-databases-from-githubcom\">GitHub API</a>. If it happens that a CodeQL database is not available for your favorite open source repository, requesting it will trigger an attempt for database creation. Downloading a CodeQL database from GitHub is the quickest way to get started with analyzing a codebase. We will be using the CodeQL extension in VS Code to request a database in the challenges.</p>\n<details>\n<summary><strong>Challenge 2—Set up CodeQL workspace</strong></summary>\n<p>In this challenge, you will set up CodeQL for the challenges. You can do so via a preconfigured codespace (recommended) or locally. The preconfigured codespace is your own mini container in a virtual machine, which comes with everything you need to query a codebase using CodeQL: VS Code, CodeQL extension for VS Code, CodeQL command line tool preinstalled, and a pre-existing CodeQL database. The workspace will enable you to run your own CodeQL queries in the later challenges.</p>\n<p>Follow the instructions in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-2/instructions.md\">GitHubSecurityLab/codeql-zero-to-hero challenge 2</a> directory.</p>\n<p>The rest of the challenges will assume that you have the VS Code with CodeQL extension and CodeQL starter workspace setup with a CodeQL database of your choice.</p>\n</details>\n<p>You can also create a CodeQL database yourself locally, using the <a href=\"https://docs.github.com/code-security/codeql-cli/using-the-codeql-cli/about-the-codeql-cli\">CodeQL command line tool</a>. Again, the process is quite straightforward for interpreted languages and may require a few more steps for compiled languages. The easiest way to install the CodeQL CLI locally is as an extension to the <a href=\"https://github.com/cli/cli\">gh</a> CLI tool—GitHub&#8217;s official CLI tool. We will do that in the challenge below. Before we begin, please note that CodeQL is free for use on open source repositories. See the CodeQL <a href=\"https://docs.github.com/code-security/codeql-cli/using-the-codeql-cli/about-the-codeql-cli#about-the-github-codeql-license\">license</a> for more information.</p>\n<details>\n<summary><strong>Challenge 3—Create CodeQL database using CodeQL CLI</strong></summary>\n<p>The CodeQL command line tool allows you to create databases from locally-sourced code. In this challenge, you will create a database for the vulnerable code we used in earlier exercises. Follow the instructions for the challenge 3 in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-3/instructions.md\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<h3 id=\"creating-and-analyzing-a-codeql-database\">Creating and analyzing a CodeQL database<a href=\"#creating-and-analyzing-a-codeql-database\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Creating and analyzing a CodeQL database\"></a></h3>\n<p>In the challenge, we created a CodeQL database by downloading the project we want to analyze and installing all the libraries and dependencies needed to run the project. For successfully creating a CodeQL database, we generally need to include the code that is “outside” of our program—namely libraries and dependencies.</p>\n<h4 id=\"codeql-database-in-an-interpreted-language\">CodeQL database in an interpreted language<a href=\"#codeql-database-in-an-interpreted-language\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"CodeQL database in an interpreted language\"></a></h4>\n<p>For creating a CodeQL database in an interpreted language, dependencies are not required to be installed.</p>\n<p>For interpreted languages in general, dependency source code will only be in the database if that dependency source code was part of the scanned codebase on the filesystem at database creation time. Most CodeQL libraries for interpreted languages are designed to reason about which APIs are called without having to see the source code of those APIs.</p>\n<h4 id=\"codeql-database-in-an-compiled-language\">CodeQL database in an compiled language<a href=\"#codeql-database-in-an-compiled-language\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"CodeQL database in an compiled language\"></a></h4>\n<p>For creating a CodeQL database in a compiled language, dependencies are required to be installed to the extent required by the build. Simply put, do what is needed to make the build work.</p>\n<p>The database will contain some compile-time information about dependencies (for example, method signatures) but will not have the source code elements of the dependencies (unless the dependency was built from source code as part of the observed build). Most CodeQL libraries for compiled languages are designed to reason about which APIs are called using the signature information available at compile-time without having to see the source code of those APIs.</p>\n<h3 id=\"downloading-a-codeql-database-vs-creating-one-yourself\">Downloading a CodeQL database vs. creating one yourself<a href=\"#downloading-a-codeql-database-vs-creating-one-yourself\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Downloading a CodeQL database vs. creating one yourself\"></a></h3>\n<p>We have established that to get a CodeQL database for a certain repository, we can either download it from GitHub or create it yourself. Does it then make a difference if you download a CodeQL database of a project from GitHub or if you create one yourself? For the majority of the cases, not really.</p>\n<p>Do remember though, that a CodeQL database is a snapshot of a certain state of the repository and GitHub stores only CodeQL databases for the newest version of all repositories. Let’s give an example—let’s say that you wanted to analyze not the newest version of a repository, but an older one. It could be that you wanted to analyze a vulnerability that was present in that previous version. GitHub stores only the newest version of a database, often made from the latest commit on the codebase. To conclude, in this case you wouldn’t be able to download an older version from GitHub, because GitHub only stores the latest version. If you’d like to analyze an older version of a database, you would need to download an older version of the software and create the database yourself using CodeQL CLI, as presented in challenge 3.</p>\n<p>Last note: CodeQL uses Static Analysis Results Interchange Format (SARIF) files to report on results of code scanning. The SARIF format has been widely accepted in the industry as a standardized output format, which allows for ease of sharing static analysis results with other tools.</p>\n<h2 id=\"ql-query-language-writing-your-own-codeql-query\">QL query language—writing your own CodeQL query<a href=\"#ql-query-language-writing-your-own-codeql-query\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"QL query language—writing your own CodeQL query\"></a></h2>\n<p>Now that we have the necessary set up, we can begin to learn how to query the CodeQL database and write our own CodeQL queries using the QL query language. Let’s start with a short introduction to QL and then test our knowledge on how to write queries in challenges.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72477 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=500&#038;resize=500%2C500\" alt=\"\" width=\"500\" height=\"500\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=500&#038;resize=500%2C500 500w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=150 150w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=300 300w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=400 400w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=200 200w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=90 90w, https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=116 116w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\"></p>\n<p>We previously learned that a CodeQL database is a relational representation of the code base, which contains information about the different source code elements, such as classes and functions. And so we can query the CodeQL database for such elements—syntactic elements—such as abstract syntax tree (AST) nodes (for example, a function call or a function definition), and for semantic elements, such as the nodes in the <a href=\"https://github.blog/2023-03-31-codeql-zero-to-hero-part-1-the-fundamentals-of-static-analysis-for-vulnerability-research/#data-flow-analysis-and-taint-tracking\">data flow</a> graph of a program. The data flow graph is one of the structures that CodeQL creates on top of the AST and contains information about the data flow within a program. Using the data flow graph we can query if there is a connection between, for example, a source of user-controlled data and a SQL injection sink.</p>\n<p>When we query the database with QL, we “ask questions” to the database. For example:</p>\n<ul>\n<li>“Show me all function calls”</li>\n<li>“Show me all function calls to functions called <code>eval</code>”</li>\n<li>“Show me all function definitions”</li>\n<li>“Show me all function definitions for functions called <code>eval</code>”</li>\n<li>“Show me all method calls to methods called ‘execute’” (Ding dong. Does this remind you of a certain vulnerability?)</li>\n<li>“Show me all method calls to methods called ‘execute’ defined within the <code>django.db</code> library”</li>\n<li>“Show me all method calls to methods called ‘execute’ defined within the <code>django.db</code> library that do not take a string literal as input”</li>\n</ul>\n<p>These examples are pretty easy to understand and the idea behind them is to get comfortable with using QL. We’ll start by going through them and later introduce more complex queries.</p>\n<h3 id=\"basic-codeql-query\">Basic CodeQL query<a href=\"#basic-codeql-query\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Basic CodeQL query\"></a></h3>\n<p>The basic syntax and structure of a CodeQL query resembles SQL syntax and consists of three statements—<code>from</code>, <code>where</code> and <code>select</code>, which describes what we are trying to find.</p>\n<ul>\n<li><code>from</code> defines the types and variables that are going to be queried.</li>\n<li><code>where</code> defines conditions on these variables in the form of a logical formula. <code>where</code> can be omitted if there are no conditions.</li>\n<li><code>select</code> defines the output of the query.</li>\n</ul>\n<p>Let’s say we would like to ask CodeQL for all function calls in a Python codebase. The query would look like below.</p>\n<pre><code>1. import python\n2.\n3. from Call c\n4. where c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\n5. select c, \"This is a function call\"\n</code></pre>\n<p>Let’s go through the query line by line.</p>\n<ul>\n<li>The first (1) line imports the python library, with all its internal structures and logic, so we can reuse the logic and data from this library such as the <code>Call</code> class, in our own query.</li>\n<li>The third line (3) defines the variables for the query. Declarations are of the form: <code></code>. In our case <code>Call</code> is the type, while the <code>c</code> is the variable name. Types represent a set of values, for example, <code>Call</code> represents all calls in a program. In our case we restrict variable <code>c</code> to only <code>Call</code> values.</li>\n<li>The fourth line (4) defines a condition on the variables. <code>c.getLocation()</code> is an operation provided on the type <code>Call</code> which returns the location in the codebase of each particular call. With the subsequent operations, <code>c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")</code> restricts the <code>c</code> variable to only the calls that are in any source file in the <code>2/challenge-1</code> folder, which contains vulnerable code snippets. If you are not following along with the challenges, then you can safely delete this line or customize it for your own codebase.</li>\n<li>The fifth (5) line defines what to report on in the results. In our case we report on all calls with an additional note “This is a function call.”</li>\n</ul>\n<details>\n<summary><strong>Challenge 4—Run the query to show all function calls</strong></summary>\n<p>With the setup that you created in the earlier challenges, run the query to show all function calls.</p>\n<ol>\n<li>Go to the <code>Explorer</code> tab and create a new file in the <code>codeql-custom-queries-python</code> folder. Call the file <code>call.ql</code> and copy the query into the file.</li>\n<li>Hover over <code>Call</code> in the third line. This will show you the definition of the <code>Call</code> type. You can always hover over any part of the query to see if there is a definition for it.</li>\n<li>Right click anywhere in the writing area of the query file and choose &#8220;CodeQL: Run Query on Selected Database&#8221;</li>\n</ol>\n<p>If you are having issues, check the instructions for challenge 4 in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-4/instructions.md\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<p>After you have run the query, you should see all the function calls in your codebase.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72478 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image3-2.png?w=422&#038;resize=422%2C374\" alt=\"\" width=\"422\" height=\"374\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image3-2.png?w=422&#038;resize=422%2C374 422w, https://github.blog/wp-content/uploads/2023/06/image3-2.png?w=300 300w\" sizes=\"(max-width: 422px) 100vw, 422px\" data-recalc-dims=\"1\"></p>\n<h3 id=\"refining-a-ql-query\">Refining a QL query<a href=\"#refining-a-ql-query\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Refining a QL query\"></a></h3>\n<p>It’s interesting to see all the function calls in a codebase, but most codebases will have way too many to audit them one by one. We should refine the query to find more precise results.</p>\n<p>Let’s say we want to look for all function calls to <code>eval</code>. The query for it will look as follows.</p>\n<pre><code>1. import python\n2.\n3. from Call c, Name name\n4. where name.getId() = \"eval\" and\n5. c.getFunc() = name and\n6. c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\n7. select c\n</code></pre>\n<p>QL is a logical language—it allows for specifying logic conditions for patterns in code using common logical operators <code>and</code>, <code>or</code>, <code>not</code>. It is also a declarative language–order for specifying conditions does not matter. We can see these qualities in the query.</p>\n<p>In comparison to the previous query, this time we put three filters in the <code>where</code> clause, connecting them with an <code>and</code>. The filters use equality signs “=” to assert equality between expressions on the two sides, which might be confusing at first glance. Note that using an equal sign in CodeQL does not mean assignment, but an assertion of equality—it means that the two sides are equal. Whether you write <code>c.getFunc() = name</code> or <code>name = c.getFunc()</code> the result will be the same.</p>\n<p>Let’s have a look at each of the filters separately.</p>\n<ul>\n<li>In the third line (3) we define the variables used in the query—<code>Call c</code> and <code>Name name</code>. As we already know, <code>Call</code> type refers to calls to functions in our codebase. The <code>Name</code> type refers to variables and it contains their name. What might be a bit confusing is that in some languages, such as Python, every named entity is a variable. In our <code>eval()</code> example, <code>eval</code> is really a variable read and <code>()</code> is the call operator. In this context we are calling whatever function is held by the <code>eval</code> variable. You can think of <code>Name</code> as a variable read expression.</li>\n<li>In the fourth (4) line, in the where clause, we restrict the <code>name</code> variable to only expressions that have <code>eval</code> as its name with <code>name.getId() = \"eval\"</code>. As we said, the <code>Name</code> type represents a name expression. With the <code>getId()</code> operation on the <code>name</code> variable we get the string representation of the node. At last, we restrict the values of the <code>name</code> variable by comparing it to “eval”.</li>\n<li>In the fifth (5) line, still in the <code>where</code> clause with <code>c.getFunc() = name”</code>, we first call the <code>getFunc()</code> operation on <code>c</code> to get the callable of the call, so the function itself. Then, we restrict it with the value of the <code>name</code> variable (which as we remember, we restricted to “eval”).</li>\n<li>In the sixth (6) line, still in the <code>where</code> clause with <code>c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")</code>, we limit the functions to the ones present in the folder <code>2/challenge-1/</code></li>\n<li>At last, in the seventh (7) line, <code>select c</code>, we output the calls that comply with all the conditions above.</li>\n</ul>\n<p>These “operations” that we called on the variables are called predicates (to be more precise—built-in predicates) and are similar to functions. Practice running it and querying a CodeQL database using other types than <code>Call</code> in the challenges.</p>\n<aside class=\"p-4 p-md-6 post-aside--large\"><p class=\"h5-mktg gh-aside-title\">Available types and predicates on types</p><p>When writing your CodeQL queries in VS Code with the CodeQL extension, you can see all available predicates on a given type by typing a dot and then pressing Ctrl + Space.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72479 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image7-1.png?w=249&#038;resize=249%2C310\" alt=\"\" width=\"249\" height=\"310\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image7-1.png?w=249&#038;resize=249%2C310 249w, https://github.blog/wp-content/uploads/2023/06/image7-1.png?w=241 241w\" sizes=\"(max-width: 249px) 100vw, 249px\" data-recalc-dims=\"1\"></p>\n<p>The same trick works if you want to see all available types you can define in the <code>from</code> clause. Just write a comma next to the defined types in the <code>from</code> clause and press Ctrl + Space. If you use additional libraries for your query (in the <code>import</code> statement), the types defined in those libraries will also appear in the dropdown list.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72480 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image6.png?w=292&#038;resize=292%2C278\" alt=\"\" width=\"292\" height=\"278\" data-recalc-dims=\"1\"></p>\n<p>If you are unsure what a certain predicate or type does, hover your mouse over the predicate or type. This will show you the documentation of its functionality. You can also go directly to the implementation of a given artifact by pressing Ctrl/Cmd + click or by right clicking the predicate name and choosing “Go to Definition.”</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72481 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image8-1.png?w=317&#038;resize=317%2C133\" alt=\"\" width=\"317\" height=\"133\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image8-1.png?w=317&#038;resize=317%2C133 317w, https://github.blog/wp-content/uploads/2023/06/image8-1.png?w=300 300w\" sizes=\"(max-width: 317px) 100vw, 317px\" data-recalc-dims=\"1\"></p>\n</aside>\n<details>\n<summary><strong>Challenge 5—Run the query to show all function calls with name “eval”</strong></summary>\n<p>Run the query to show all function calls to functions named “eval.” Check out the subsection “Available types and predicates on types” and use the ideas to explore available types and predicates in the query. The challenge is also available in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<details>\n<summary><strong>Challenge 6—Query for other simple types</strong></summary>\n<p><code>Call</code> is one of the many types that are available in CodeQL for Python. Try to write a query for showing all function definitions.</p>\n<p>Check the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2/challenge-6\">GitHubSecurityLab/codeql-zero-to-hero repository</a> challenge 6 for the solution. In CodeQL, we can often achieve the same results in many different ways, so don’t worry if your solution is different from the provided solution. Just check that you have the intended results.</p>\n</details>\n<h3 id=\"predicates\">Predicates<a href=\"#predicates\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Predicates\"></a></h3>\n<p>A QL predicate is like a mini from-where-select query—it encapsulates a portion of a logic in a program, so it can be reused. For example, the built-in predicate <code>getFunc()</code> on the <code>Call</code> type returns the callable (the function or method that is being called). As an example, querying for a call gives us <code>eval(“some code”)</code>, while <code>call.getFunc()</code> gives us just <code>eval</code>. the function name that we called). We can create our own predicates—we could, for example, create a predicate to <strong>encapsulate</strong> the logic from the query above.</p>\n<pre><code>import python\n\npredicate isEvalCall(Call c, Name name) {\n  c.getFunc() = name and\n  name.getId() = \"eval\"\n}\n\nfrom Call c, Name name\nwhere isEvalCall(c, name) and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c, \"call to 'eval'.\"\n</code></pre>\n<p>This query does the exact same thing as the previous query—it searches for all functions with “eval” in their name. To create a predicate we do the following:</p>\n<ul>\n<li>First, copy the previous query and add a predicate template above it:</li>\n</ul>\n<pre><code>import python\n\npredicate &lt;name&gt;(&lt;variable type&gt;:&lt;variable name&gt;) {\n}\n\nfrom Call c, Name name\nwhere name.getId() = \"eval\" and\n  c.getFunc() = name and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c\n</code></pre>\n<ul>\n<li>Fill out the template with a name for the predicate (<code>isEvalCall</code>). Note that predicates names must start with a lowercase character and it&#8217;s recommended to use <a href=\"https://en.wikipedia.org/wiki/Camel_case\">camelCase</a> casing. Next, copy the variable declarations from the <code>from</code> clause (<code>Call c, Name name</code>) and paste them into the predicate variable declarations. Copy the desired functionality from the <code>where</code> clause (<code>c.getFunc() = name and name.getId() = \"eval\"</code>) into the body of the predicate.</li>\n</ul>\n<pre><code>import python\n\npredicate isEvalCall(Call c, Name name) {\n  c.getFunc() = name and\n  name.getId() = \"eval\"\n}\n\nfrom Call c, Name name\nwhere c.getFunc().toString() = \"eval\" and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c, \"call to 'eval'.\"\n</code></pre>\n<ul>\n<li>Replace the copied functionality with the name of the predicate.</li>\n</ul>\n<pre><code>import python\n\npredicate isEvalCall(Call c, Name name) {\n  c.getFunc() = name and\n  name.getId() = \"eval\"\n}\n\nfrom Call c, Name name\nwhere isEvalCall(c, name) and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c, \"call to 'eval'.\"\n</code></pre>\n<p>Predicates make your query reusable, more readable, and easier to test.</p>\n<p>There exist also <a href=\"https://codeql.github.com/docs/ql-language-reference/types/#member-predicates\">member predicates</a>, which are predicates that only apply to members of a particular class and require casting to that specific class, but it’s a bit more advanced topic and we will not be introducing them further in this blog.</p>\n<aside class=\"p-4 p-md-6 post-aside--large\"><p class=\"h5-mktg gh-aside-title\">Quick evaluation</p><p>If you are writing any new predicates (or classes, as we will later learn) a nice feature to know of is “Quick evaluation”. Right click on the predicate name (here “isEvalCall”) and choose “CodeQL: Quick evaluation”. This feature runs only that predicate against a database, instead of running the whole from-where-select query.</p>\n</aside>\n<details>\n<summary><strong>Challenge 7—Follow the steps outlined above to write your own external predicate</strong></summary>\n<p>Follow the steps outlined above to write your own external predicate. The challenge is also available in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<h3 id=\"classes\">Classes<a href=\"#classes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Classes\"></a></h3>\n<p>QL is an object-oriented language. It allows for creating classes and use of object-oriented type patterns like inheritance, encapsulation and composition.</p>\n<p>Classes allow you to define new types in CodeQL. Like all types, they describe sets of values. In a similar way as we created the predicate, we can modify the query to include a class instead. We can define a new CodeQL class to represent a set of function calls to functions named “eval.” Here is how the class will look like.</p>\n<pre><code>import python\n\nclass EvalCall extends Call {\n  EvalCall() {\n    exists(Name name |\n      this.getFunc() = name |\n      name.getId() = \"eval\")\n  }\n}\n\nfrom Call c\nwhere c instanceof EvalCall and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c, \"call to 'eval'.\"\n</code></pre>\n<p>We followed a similar process to create the class.</p>\n<ul>\n<li>First, copy the previous query and add a class template above it. In the class, we have a “characteristic predicate,” which defines additional conditions that restrict the values of the class that is being extended. In this case, the characteristics of the EvalCall type that make it different from a regular Call.</li>\n</ul>\n<pre><code>import python\n\nclass &lt;name&gt; extends &lt;type&gt; {\n  &lt;characteristic predicate&gt;() {\n  }\n}\n\nfrom Call c, Name name\nwhere name.getId() = \"eval\" and\n  c.getFunc() = name and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c\n</code></pre>\n<ul>\n<li>Fill out the template with a name for the class (<code>EvalCall</code>) and type (<code>Call</code>). Note that type names are always written in <a href=\"https://www.theserverside.com/definition/Pascal-case\">PascalCase</a>. Next, extend the one of the types that is defined in the <code>from</code> clause (<code>Call</code>). Mind that <code>Call</code> is a supertype. All new classes in CodeQL need to have at least one supertype, which defines the initial set of values in our class.</li>\n<li>Then, name the characteristic predicate. It is the same name as the class name (<code>EvalCall</code>). We restrict the values of the class in the characteristic predicate by defining constraints with the <code>this</code> keyword. <code>this</code> refers to the <code>Call</code> we are starting with, and allows us to define logical conditions which define the characteristics of an <code>EvalCall</code> instance.</li>\n<li>In our case, we copy the desired functionality from the <code>where</code> clause (<code>c.getFunc() = name and name.getId() = \"eval\"</code>) and change it to use the <code>this</code> keyword (<code>this.getFunc() = name and name.getId() = \"eval\"</code>). Since we extended the <code>Call</code> type, we replace the variable <code>c</code> with <code>this</code>.</li>\n<li>But we encounter a problem! Our conditions include the variable <code>name</code> of type <code>Name</code>, which we don’t have defined in our new <code>EvalCall</code> class. For these cases, we can introduce the <code>exists()</code> construct, which allows us to define local variables. We first define the local variables, then separate them from the conditions with a pipe <code>|</code>. All next conditions are can be separated by a pipe or an <code>and</code>—the form looks like this <code>exists( | | )</code>. All in all our <code>exists()</code> will look like this: <code>exists(Name name | this.getFunc() = name | name.getId() = \"eval\")</code></li>\n</ul>\n<pre><code>import python\n\nclass EvalCall extends Call {\n  EvalCall() {\n    exists(Name name |\n      this.getFunc() = name |\n      name.getId() = \"eval\")\n  }\n}\n\nfrom Call c, Name name\nwhere name.getId() = \"eval\" and\n  c.getFunc() = name and\n  c.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c\n</code></pre>\n<ul>\n<li>At last, replace the copied functionality from the <code>where</code> clause with the class (<code>call instanceof EvalCall</code>)</li>\n</ul>\n<pre><code>import python\n\nclass EvalCall extends Call {\n    EvalCall() {\n        exists(Name name |\n            this.getFunc() = name |\n            name.getId() = \"eval\")\n    }\n}\n\nfrom Call c\nwhere c instanceof EvalCall and\nc.getLocation().getFile().getRelativePath().regexpMatch(\"2/challenge-1/.*\")\nselect c, \"call to 'eval'.\"\n</code></pre>\n<p>What’s interesting about CodeQL is that there are often many ways to achieve the same result, as we have seen by creating a predicate and a class that do the same thing. It doesn’t matter which one you use, because later the CodeQL compiler will optimize the query to the same form. It’s more important that the query is readable to you and to the people you might share it with.</p>\n<p>Note that in this case, if we didn’t need the <code>Name name</code> variable in our conditions, we wouldn’t have needed to use the <code>exists()</code> construct. Nevertheless, the <code>exists()</code> construct is very often used when writing your own queries and we decided to provide an example which would showcase how it works. There are more useful formulas in the QL language <a href=\"https://codeql.github.com/docs/ql-language-reference/formulas/#exists\">reference</a>.</p>\n<details>\n<summary><strong>Challenge 8—Follow the steps outlined above to write your own class</strong></summary>\n<p>Follow the steps outlined above to write your own class. The challenge is also available in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<details>\n<summary><strong>Challenge 9—Find all functions with “command” as part of its name</strong></summary>\n<p>In an earlier challenge, you wrote a query for function calls. Refine that query further to report all functions which have “command” as part of its name (hint: there’s a predicate that allows you to write regexes).</p>\n<p>Check the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> folder for the solution.</p>\n</details>\n<p>An observant reader might think: it was easy to guess the type for a function and a function call, but what if I don’t know the type that I am looking for? And that’s a good point. In that case, you might want to look at the <a href=\"https://github.blog/2023-03-31-codeql-zero-to-hero-part-1-the-fundamentals-of-static-analysis-for-vulnerability-research/#syntactic-pattern-matching-abstract-syntax-tree-and-control-flow-graph\">Abstract Syntax Tree</a> of the code you want to query for.</p>\n<aside class=\"p-4 p-md-6 post-aside--large\"><p class=\"h5-mktg gh-aside-title\">Query the Abstract Syntax Tree (AST) of a CodeQL database</p><p>If you are unsure what types a certain line of code contains, use the “Query the AST” option to visualize the AST.</p>\n<ol>\n<li>Go to the “Explorer” tab in VS Code, which should contain the source archive for the CodeQL database you have added earlier. It should be in one of the bottom folders.</li>\n<li>Go into the file and code line that interests you. Right click on that line and choose “CodeQL: View AST”. This will show you the AST of the file in the “AST Viewer” in the CodeQL tab.</li>\n<li>Click on any line and see the AST expand to the node that represents that line of code.</li>\n</ol>\n<p>For example, here we see the node for the line containing <code>os.system(\"ls \" + files)</code>.</p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-large wp-image-72482 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/06/image4-1.png?w=587&#038;resize=587%2C514\" alt=\"\" width=\"587\" height=\"514\" srcset=\"https://github.blog/wp-content/uploads/2023/06/image4-1.png?w=587&#038;resize=587%2C514 587w, https://github.blog/wp-content/uploads/2023/06/image4-1.png?w=300 300w\" sizes=\"(max-width: 587px) 100vw, 587px\" data-recalc-dims=\"1\"></p>\n</aside>\n<details>\n<summary><strong>Challenge 10—Query the AST</strong></summary>\n<p>Access the code in a CodeQL database of your choice using “Query the AST” option. The challenge is also available in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<details>\n<summary><strong>Challenge 11—Do the QL detective tutorials</strong></summary>\n<p>To get a better understanding of how to use the QL query language, do the <a href=\"https://codeql.github.com/docs/writing-codeql-queries/ql-tutorials/\">QL tutorials</a> available in the CodeQL documentation.</p>\n</details>\n<h3 id=\"taint-tracking-configuration\">Taint tracking configuration<a href=\"#taint-tracking-configuration\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Taint tracking configuration\"></a></h3>\n<p>Let’s stop for a second and revisit what we said in the introduction. CodeQL allows for querying syntactic elements (for example, functions or function calls) and semantic elements (for example, a data flow between a source and a sink). Until now, we have queried only for syntactic elements. It was mentioned before that CodeQL allows to track data flow and taint through an application.</p>\n<p>It does so by the so-called “taint tracking configuration” in which the user defines the sources, the sinks and then calls a predicate that checks if there is a path from the source to the sink. There’s also a possibility to define sanitizers, which would stop the data flow and not report a vulnerability, in case this sanitizer is found on its path. All CodeQL queries use the taint tracking configuration. We will explain taint tracking at a later date, but if you feel you’d like to try it out now, check out some of the workshops available in the “Other resources” section, which introduce the topic. For now, let’s try running a few prewritten taint tracking queries.</p>\n<p>In the “Code scanning with CodeQL” section, we enabled code scanning with CodeQL on a repository, which showed a lot of vulnerabilities in the codebase. Generally, there’s a separate taint tracking query for each vulnerability, but there are a few queries that cover several CWEs. CodeQL for Python stores all its security related queries in <code>python/ql/src/Security/</code> folder. Other languages store it in similar folder structures, for example, Ruby in <code>ruby/ql/src/queries/security</code> or C# in <code>csharp/ql/src/Security Features</code>. They should be easy to find. You can view the full CWE coverage list for each language <a href=\"https://codeql.github.com/codeql-query-help/full-cwe/\">here</a>.</p>\n<details>\n<summary><strong>Challenge 12—Run one of the security queries</strong></summary>\n<p>Run the SQL injection query against the database. For Python it’s located in:</p>\n<p><code>python/ql/src/Security/CWE-089/SqlInjection.ql</code></p>\n<p>Review the results. Try running a few other queries. The challenge is also available in the <a href=\"https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2\">GitHubSecurityLab/codeql-zero-to-hero</a> repository.</p>\n</details>\n<h2 id=\"other-resources\">Other resources<a href=\"#other-resources\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Other resources\"></a></h2>\n<p>If you didn’t have enough CodeQL (or you’d like to try other challenges), there are plenty of workshops, tutorials, and challenges for various languages. As for workshops, if you can, try to see workshops from different presenters—you will see how each of them approach a vulnerability target differently:</p>\n<ul>\n<li>Java workshop from GitHub Satellite 2020—<a href=\"https://www.youtube.com/watch?v=nvCd0Ee4FgE\">workshop video</a>, <a href=\"https://github.com/githubsatelliteworkshops/codeql\">repository</a> (we recommend you start here!).</li>\n<li>Javascript workshop from GitHub Satellite 2020—<a href=\"https://www.youtube.com/watch?v=pYzfGaLTqC0\">workshop video</a>, <a href=\"https://github.com/githubsatelliteworkshops/codeql\">repository</a>.</li>\n<li>C/C++, Java and Ruby workshops from GitHub Universe—<a href=\"https://github.com/githubuniverseworkshops/codeql\">repository</a> for C/C++, Java and Ruby, <a href=\"https://www.youtube.com/watch?v=eAjecQrfv3o\">C/C++</a> video, <a href=\"https://www.youtube.com/watch?v=-bJ2Ioi7Icg\">Java</a> video.</li>\n<li><a href=\"https://securitylab.github.com/ctf/\">C, Java, Javascript and Go challenges</a>, which GitHub Security Lab used in previous CTFs. Have you managed to solve any of the challenges? Tweet about it!</li>\n</ul>\n<h2 id=\"conclusion\">Conclusion<a href=\"#conclusion\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Conclusion\"></a></h2>\n<p>We hope that with the information shared in this blog you’ll be able to use CodeQL with the built-in queries, understand modeling in CodeQL, and write your own simple queries in CodeQL with more confidence. There is a lot more that you can do in both security research and CodeQL, and I hope this blog gives you a good introduction and that it enables you to find your own vulnerabilities in the future. In the next blog, we will dive into taint tracking and security research with CodeQL.</p>\n<p>If CodeQL and this post helped you to find a vulnerability, we would love to hear about it! Reach out to us on <a href=\"https://gh.io/securitylabslack\">GitHub Security Lab Slack</a> or tag us <a href=\"https://twitter.com/GHSecurityLab\">@ghsecuritylab</a> on Twitter.</p>\n<h3 id=\"contact\">Contact<a href=\"#contact\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"Contact\"></a></h3>\n<p>If you have any questions, issues with challenges or with writing a CodeQL query, feel free to join and ask on the <a href=\"https://gh.io/securitylabslack\">GitHub Security Lab server on Slack</a>. The Slack server is open to anyone and gives you access to ask questions about issues with CodeQL, CodeQL modeling or anything else CodeQL related, and receive answers from a number of CodeQL engineers and security researchers from GitHub Security Lab. If you prefer to stay off Slack, feel free to ask any questions in <a href=\"https://github.com/github/codeql/discussions\">CodeQL repository discussions</a> or in <a href=\"https://github.com/github/securitylab/discussions\">GitHub Security Lab repository discussions</a>.</p>\n",
    "Permalink": "https://github.blog/2023-06-15-codeql-zero-to-hero-part-2-getting-started-with-codeql/",
    "Links": [
      "https://codeql.github.com/",
      "https://github.blog/2023-03-31-codeql-zero-to-hero-part-1-the-fundamentals-of-static-analysis-for-vulnerability-research/",
      "https://codeql.github.com/codeql-query-help/full-cwe/",
      "https://github.blog/2019-09-18-github-welcomes-semmle/",
      "https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning",
      "https://docs.github.com/actions/learn-github-actions/understanding-github-actions",
      "https://github.blog/2023-01-09-default-setup-a-new-way-to-enable-github-code-scanning/",
      "https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-the-codeql-workflow-for-compiled-languages",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-1/instructions.md",
      "https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/built-in-codeql-query-suites#security-extended-query-suite",
      "https://docs.github.com/code-security/codeql-cli/using-the-codeql-cli/creating-codeql-databases#downloading-databases-from-githubcom",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-2/instructions.md",
      "https://docs.github.com/code-security/codeql-cli/using-the-codeql-cli/about-the-codeql-cli",
      "https://github.com/cli/cli",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-3/instructions.md",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/blob/main/2/challenge-4/instructions.md",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2",
      "https://github.com/GitHubSecurityLab/codeql-zero-to-hero/tree/main/2/challenge-6",
      "https://en.wikipedia.org/wiki/Camel_case",
      "https://codeql.github.com/docs/ql-language-reference/types/#member-predicates",
      "https://www.theserverside.com/definition/Pascal-case",
      "https://codeql.github.com/docs/ql-language-reference/formulas/#exists",
      "https://codeql.github.com/docs/writing-codeql-queries/ql-tutorials/",
      "https://www.youtube.com/watch?v=nvCd0Ee4FgE",
      "https://github.com/githubsatelliteworkshops/codeql",
      "https://www.youtube.com/watch?v=pYzfGaLTqC0",
      "https://github.com/githubuniverseworkshops/codeql",
      "https://www.youtube.com/watch?v=eAjecQrfv3o",
      "https://www.youtube.com/watch?v=-bJ2Ioi7Icg",
      "https://securitylab.github.com/ctf/",
      "https://gh.io/securitylabslack",
      "https://twitter.com/GHSecurityLab",
      "https://github.com/github/codeql/discussions",
      "https://github.com/github/securitylab/discussions"
    ],
    "Media": [
      "https://github.blog/wp-content/uploads/2023/06/image5.png?w=1024&resize=1024%2C414",
      "https://github.blog/wp-content/uploads/2023/06/image1-2.png?w=712&resize=712%2C535",
      "https://github.blog/wp-content/uploads/2023/06/image2-3.png?w=500&resize=500%2C500",
      "https://github.blog/wp-content/uploads/2023/06/image3-2.png?w=422&resize=422%2C374",
      "https://github.blog/wp-content/uploads/2023/06/image7-1.png?w=249&resize=249%2C310",
      "https://github.blog/wp-content/uploads/2023/06/image6.png?w=292&resize=292%2C278",
      "https://github.blog/wp-content/uploads/2023/06/image8-1.png?w=317&resize=317%2C133",
      "https://github.blog/wp-content/uploads/2023/06/image4-1.png?w=587&resize=587%2C514"
    ]
  },
  {
    "Title": "GitHub Availability Report: May 2023",
    "Author": "Jakub Oleksy",
    "TextSummary": "In May, we experienced four incidents that resulted in degraded performance across GitHub services. This report also sheds light into three April incidents that resulted in degraded performance across GitHub services. ",
    "RawContent": "<p>In May, we experienced four incidents that resulted in degraded performance across GitHub services. This report also sheds light into three April incidents that resulted in degraded performance across GitHub services.</p>\n<h4 id=\"april-26-2311-utc-lasting-51-minutes\">April 26 23:11 UTC (lasting 51 minutes)<a href=\"#april-26-2311-utc-lasting-51-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"April 26 23:11 UTC (lasting 51 minutes)\"></a></h4>\n<p>On April 25 at 23:11 UTC, a subset of users began to see a degraded experience with GitHub Copilot code completions. We publicly statused GitHub Copilot to yellow at 23:26 UTC, and to red at 23:41 UTC. As engineers identified the impact to be a subset of requests, we statused back to yellow at 23:48 UTC. The incident was fully resolved on April 26 at 00:02 UTC, and we publicly statused green at 00:30 UTC.</p>\n<p>The degradation consisted of a rolling partial outage across all three GitHub Copilot regions: US Central, US East, and Switzerland North. Each of these regions experienced approximately 15-20 minutes of degraded service during the global incident. At the peak, 6% of GitHub Copilot code completion requests failed.</p>\n<p>We identified the root cause to be a faulty configuration change by an automated maintenance process. The process was initiated across all regions sequentially, and placed a subset of faulty nodes in service before the rollout was halted by operators. Automated traffic rollover from the failed nodes and regions helped to mitigate the issue.</p>\n<p>Our efforts to prevent a similar incident in the future include both reducing the batch size and iteration speed of the automated maintenance process, and lowering our time to detection by adjusting our alerting thresholds.</p>\n<h4 id=\"april-27-0859-utc-lasting-57-minutes\">April 27 08:59 UTC (lasting 57 minutes)<a href=\"#april-27-0859-utc-lasting-57-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"April 27 08:59 UTC (lasting 57 minutes)\"></a></h4>\n<p>On April 26 at 08:59 UTC, our internal monitors notified us of degraded availability with GitHub Packages. Users would have noticed slow or failed GitHub Packages upload and download requests. Our investigation revealed a spike in connection errors to our primary database node.  We quickly took action to resolve the issue by manually restarting the database.  At 09:56 UTC, all errors were cleared and users experienced a complete recovery of the GitHub Packages service. A planned migration of GitHub Packages database to a more robust platform was completed on May 2, 2023 to prevent this issue from recurring.</p>\n<h4 id=\"april-28-1226-utc-lasting-19-minutes\">April 28 12:26 UTC (lasting 19 minutes)<a href=\"#april-28-1226-utc-lasting-19-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"April 28 12:26 UTC (lasting 19 minutes)\"></a></h4>\n<p>On April 28 at 12:26 UTC, we were notified of degraded availability for GitHub Codespaces. Users in the East US region experienced failures when creating and resuming codespaces. At 12:45 UTC, we used regional failover to redirect East US codespace creates and resumes to the nearest healthy region, East US 2, and users experienced a complete and nearly immediate recovery of GitHub Codespaces.</p>\n<p>Our investigation indicated our cloud provider had experienced an outage in the East US region, with virtual machines in that region experiencing internal operation errors. Virtual machines in the East US 2 region (and all other regions) were healthy, which enabled us to use regional failover to successfully recover GitHub Codespaces for our East US users. When our cloud provider’s outage was resolved, we were able to seamlessly direct all of our East US GitHub Codespaces uses back with no downtime.</p>\n<p>Long-term mitigation is focused on reducing our time to detection for outages such as this by improving our monitors and alerts, as well as reducing our time to mitigate by making our regional failover tooling and documentation more accessible.</p>\n<h4 id=\"may-4th-1553-utc-lasting-30-minutes\">May 4th 15:53 UTC (lasting 30 minutes)<a href=\"#may-4th-1553-utc-lasting-30-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"May 4th 15:53 UTC (lasting 30 minutes)\"></a></h4>\n<p>On May 4th at 15:23 UTC, our monitors detected degraded performance for Git Operations, GitHub APIs, GitHub Issues, GitHub Pull Requests, GitHub Webhooks, GitHub Actions, GitHub Pages, GitHub Codespaces, and GitHub Copilot. After troubleshooting we were able to mitigate the issue by performing a primary failover on our repositories database cluster. Further investigation indicated the root cause was connection pool exhaustion on our proxy layer.  Prior updates to this configuration were inconsistently applied. We audited and fixed our proxy layer connection pool configurations during this incident, and updated our configuration automation to dynamically apply config changes without disruption to ensure consistent configuration of database proxies moving forward.</p>\n<h4 id=\"may-09-1127-utc-lasting-10-hours-and-44-minutes\">May 09 11:27 UTC (lasting 10 hours and 44 minutes)<a href=\"#may-09-1127-utc-lasting-10-hours-and-44-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"May 09 11:27 UTC (lasting 10 hours and 44 minutes)\"></a></h4>\n<p>On May 9 at 11:27 UTC, users began to see failures to read or write Git data. These failures continued until 12:33 UTC, affecting Git Operations, GitHub Issues, GitHub Actions, GitHub Codespaces, GitHub Pull Requests, GitHub Web Hooks, and GitHub APIs. Repositories and GitHub Pull Requests required additional time to fully recover job results and search capabilities, with recovery completing at 21:20 UTC. On May 11 at 13:33 UTC, similar failures occurred affecting the same services until 14:40 UTC. Again, GitHub Pull Requests required additional time to fully recover search capabilities, with recovery completing at 18:54 UTC. We discussed both of these events in a <a href=\"https://github.blog/2023-05-16-addressing-githubs-recent-availability-issues/\">previous blog post</a> and can confirm they share the same root cause.</p>\n<p>Based on our investigation we determined that the cause of this crash is due to a bug in the database version we are running, and the conditions causing this bug were more likely to happen in a custom configuration on this data cluster. We updated our configuration to match the rest of our database clusters, and this cluster is no longer vulnerable to this kind of failover.</p>\n<p>The bug has since been reported to the database maintainers, accepted as a private bug, and fixed. The fix is slated for a release expected in July.</p>\n<p>There have been several directions of work in response to these incidents to avoid reoccurrence. We have focused on removing special case configurations of our database clusters to avoid unpredictable behavior from custom configurations. Across feature areas, we have also expanded tooling around graceful degradation of web pages when dependencies are unavailable.</p>\n<h4 id=\"may-10-1238-utc-lasting-11-hours-and-56-minutes\">May 10 12:38 UTC (lasting 11 hours and 56 minutes)<a href=\"#may-10-1238-utc-lasting-11-hours-and-56-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"May 10 12:38 UTC (lasting 11 hours and 56 minutes)\"></a></h4>\n<p>On May 10 at 12:38 UTC, issuance of auth tokens for GitHub Apps started failing, impacting GitHub Actions, GitHub API Requests, GitHub Codespaces, Git Operations, GitHub Pages, and GitHub Pull Requests.  We identified the cause of these failures to be a significant increase in write latency on a shared permissions database cluster.  First responders mitigated the incident by identifying the data shape in new API calls that was causing very expensive database write transactions and timeouts in a loop and blocking the source.  We shared additional details on this incident in a <a href=\"https://github.blog/2023-05-16-addressing-githubs-recent-availability-issues/\">previous blog post</a>, but we wanted to share an update on our follow-up actions.  Beyond the immediate work to address the expensive query pattern that caused this incident, we completed an audit of other endpoints to identify and correct any similar patterns.  We completed improvements to the observability of API errors and have further work in progress to improve diagnosis of unhealthy MySQL write patterns.  We also completed improvements to tools, documentation and playbooks, and training for both the technical diagnosis and our general incident response to address issues encountered while mitigating this issue and to reduce the time to mitigate similar incidents in the future.</p>\n<h4 id=\"may-16-2107-utc-lasting-25-minutes\">May 16 21:07 UTC (lasting 25 minutes)<a href=\"#may-16-2107-utc-lasting-25-minutes\" class=\"heading-link pl-2 text-italic text-bold\" aria-label=\"May 16 21:07 UTC (lasting 25 minutes)\"></a></h4>\n<p>On May 16 at 21:08 UTC, we were alerted to degradation of multiple services. GitHub Issues, GitHub Pull Requests, and Git Ops were unavailable while GitHub API, GitHub Actions, GitHub Pages, and GitHub Codespaces were all partially unavailable.  Alerts indicated that the primary database of a cluster supporting key-value data had experienced a hardware crash.  The cluster was left in such a state that our failover automation was unable to select a new primary to promote due to the risk of data loss.  Our first responder evaluated the cluster, determined it was safe to proceed, and then manually triggered a failover to a new primary host 11 minutes after the server crash.  We aspire to reduce our response time moving forward and are looking into improving our alerting for cases like this.  Long-term mitigation is focused on reducing dependency on this cluster as a single point of failure for much of the site.</p>\n<hr>\n<p>Please follow our <a href=\"https://www.githubstatus.com/\">status page</a> for real-time updates on status changes. To learn more about what we’re working on, check out the <a href=\"https://github.blog/category/engineering/\">GitHub Engineering Blog</a>.</p>\n",
    "Permalink": "https://github.blog/2023-06-14-github-availability-report-may-2023/",
    "Links": [
      "https://github.blog/2023-05-16-addressing-githubs-recent-availability-issues/",
      "https://www.githubstatus.com/",
      "https://github.blog/category/engineering/"
    ],
    "Media": []
  }
]